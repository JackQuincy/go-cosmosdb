// Package gencosmosdb Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cosmosdb/collection.go
// cosmosdb/cosmosdb.go
// cosmosdb/database.go
// cosmosdb/document.go
// cosmosdb/template.go
package gencosmosdb

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _collectionGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5b\x6f\xdb\x38\x16\x7e\xb6\x7e\x05\xab\x87\xc2\x4e\x5c\xfb\x3d\x80\x1f\x16\x71\xdb\x0d\xba\xe9\x1a\x6d\x76\x31\x40\x10\xb4\x0c\x75\x6c\x73\x22\x93\x1a\x92\x6a\x1d\x04\xfd\xef\x03\x92\xa2\xc5\x9b\x62\x27\x33\x93\x87\xc2\xe2\xb9\x7f\xe7\x46\xb6\xc1\xe4\x01\x6f\x00\x11\x2e\x77\x5c\x56\xf7\x45\x41\x77\x0d\x17\x0a\x8d\x8b\x51\xc9\x40\xcd\xb7\x4a\x35\x65\x31\x29\x8a\xf9\x1c\x5d\xf2\xba\x06\xa2\x28\x67\x48\x40\x23\x40\x02\x53\x12\x61\x44\x0e\xe7\x85\x7a\x6c\xc0\xe7\x93\x4a\xb4\x44\xa1\xa7\x62\x74\xb5\x44\xf9\x3f\xa9\x04\x65\x9b\x1c\xe5\xfb\xef\x92\xb3\x8b\x92\x56\x53\xbe\xa3\x0a\x76\x8d\x7a\x2c\xbf\x17\xa3\x2f\x20\x79\x2b\x08\x24\x1a\x8f\x6a\xfa\x26\x62\x5d\x37\x74\x07\x52\xe1\x5d\x13\x4b\x50\xa6\x06\xfc\x75\xba\x94\x0c\x55\x7d\x85\x7a\xfd\xba\x00\xbf\x49\xa8\xd7\xa1\xb2\xf7\x37\x38\x2b\x71\x82\x32\x50\x78\x13\x2a\x5b\x72\xd2\xee\x4c\xae\x5e\xac\xac\xe2\x24\x0e\x53\x71\x01\xd5\x4a\x70\x02\x55\x2b\x40\xbe\x24\xcc\x46\x24\xea\x6e\x04\xdd\x6c\x40\x24\xae\x9d\xa0\x4e\x75\xa2\xa1\xc2\xff\x49\x10\x4b\x58\x53\x06\xd5\x87\x96\x99\x2a\x94\x27\x2a\x6c\xab\x75\xa4\xec\x92\xb3\x75\x4d\xc9\x6b\x90\x23\x4e\x34\xd4\x78\xc5\x2a\xd8\x53\xb6\x59\xf1\x9a\x92\x47\x4f\xee\x6c\x90\xe2\xda\x20\xa0\x87\x5a\x57\x58\x28\xaa\x43\xfd\x04\x8f\x81\x37\x67\x83\x94\x4e\x6b\xe3\xd1\xf3\xb1\xeb\x76\xab\x5b\xcd\xd2\x79\x76\x36\x48\xe9\x74\x92\x01\x7a\xa8\xff\x23\x70\xd9\x60\x45\x71\xad\xf5\xd1\x1e\xcc\xb3\x41\x4a\xa7\x7f\x13\xd1\x03\xbd\xbf\xcc\xa8\x8a\xc0\xf4\xc7\x15\x43\x0e\x49\xd4\x18\xaa\x1d\x5a\x91\x44\x3f\xb8\xfe\xd5\x2a\xbe\xc3\x8a\x12\xe3\xc2\x3d\xe7\x75\x8a\x22\x76\x3c\xf9\x64\x5f\xf3\x0a\x92\x9a\x89\xd2\xaa\x79\x62\x69\x52\xb7\x15\x54\x2b\xac\xb6\x12\xdd\xde\xf9\xdf\xbd\xb4\xc7\x13\x8d\x90\xfd\x71\x71\xd8\x0f\x89\x3b\x18\x3d\x99\x18\x44\x4b\x42\x0d\x56\x5b\x07\xa1\xc7\xdd\x03\x68\x3e\xbd\x9e\x39\x54\x9e\xda\x66\xe0\x02\xeb\x6b\x05\xfb\x00\x21\xc8\xbb\xa7\xd9\x32\xc9\xf5\x52\xea\x39\xb2\xc4\x0a\xdf\x68\x82\x73\xa5\x33\x50\x75\xe7\xa1\x37\x9f\x28\xab\x82\x66\xef\xb8\x1f\x28\x8b\x96\xc8\x4a\x00\xa1\x52\xaf\xbb\x6e\x6b\xb8\x08\xdd\x79\xc6\x75\x3f\x3b\x51\x04\x2e\x29\x1e\xb2\x01\x77\x84\x6c\xe8\x5d\x82\xaa\x35\x17\x8c\x81\x60\x79\x1f\x06\x00\x7a\x80\xae\x15\x02\xe6\xd0\x9a\x1e\x84\xb7\x77\xa9\x49\x99\xc7\xee\x50\xf2\x83\xd8\xfd\x1f\x84\x8f\xdc\x81\xf3\x87\x3d\xcf\x84\x32\x38\x7d\xa2\x3b\x89\xe5\x42\xe2\xc0\x16\xb4\xfb\xa0\x96\x3e\x5e\xdb\xb5\xf9\xbf\x10\x81\x5d\xd2\xbb\x19\xf5\x5d\x17\xc4\xb2\x99\x61\x99\x34\x46\x46\x9b\xdb\xbf\xc7\xb5\x39\xce\x0c\x94\xc9\xa0\x0d\x20\xec\xc7\xac\x41\x93\x6e\x2c\x72\x89\x50\x8f\x98\x69\xae\xd0\x21\x15\xf7\xd5\xaf\xe8\x2a\x29\x7d\xa3\xfd\x4d\x52\xc6\x57\x49\xe9\xd9\xb9\xe4\xed\xe1\x7a\x16\x5c\xd4\xfa\xe5\xdb\x32\x35\x7c\x6b\x0c\x26\xf1\xe0\xdd\xd0\xb7\x7d\x7b\xe7\x5d\x6a\x3b\x09\x77\xad\xf2\xf8\x8e\x74\xde\x17\xcc\x36\x10\x04\x1c\x74\x1f\x12\x86\x9e\x36\x61\x27\x97\x07\x20\x87\xc3\xcb\xe0\x08\x6b\x3a\xab\x21\x01\x27\xe3\xde\xed\x5d\x72\xe8\xe4\x53\xee\x53\x90\x7a\x66\x50\x59\xa8\x06\x90\x7a\xfe\xd5\x11\xcf\xa4\x13\x9e\x17\xb1\xc8\x49\xef\x88\x78\xa2\x9d\xf2\x60\x48\x0c\x9d\xf4\x32\x48\xa4\xd2\x27\xc0\x35\xde\x9b\x1d\x22\xe9\x0f\x18\x90\xda\x79\x2c\x91\x30\x65\x66\xb5\x3f\x27\xec\xb1\x0c\xc1\xb9\x12\xb0\xa6\xfb\x0c\x32\x82\x56\x96\x16\x61\xba\x15\xbc\xdd\x6c\x9b\x56\x7d\x10\xd8\x76\x5e\x2c\xa9\x12\x96\xf8\xb1\x82\x55\x2b\x9f\x05\x4b\x1a\x96\xa4\xb8\xe3\xe7\x52\xba\xf4\x0c\x4b\x5c\xc6\xa6\x20\xfb\x29\x76\x59\x53\x60\xca\xab\xc7\x33\x7d\xd7\xb8\xc7\x12\x2c\xa5\x18\x35\xfd\x0a\x4f\x46\x63\x27\x4d\xc3\x37\x36\x22\x56\x34\x9a\x8f\x8e\x99\x29\x10\x6b\x4c\xc0\x8c\x09\x01\x58\xc1\xf8\xac\xe7\x9a\x20\xff\x6b\x8a\x40\x08\x2e\x26\xc5\xe8\x3f\x54\xaa\xf1\xc4\x53\x77\xa5\x40\x60\xc5\x85\xbe\xa7\xab\xb1\x75\x70\x48\x78\x09\x35\xc4\x66\x0c\x4d\x67\xbf\xa9\x31\x39\xc9\x85\x74\x46\x78\x66\x33\x03\xc4\x09\xa6\xa8\xeb\x60\x9c\xff\x3e\xf6\x71\x5e\x8a\x11\xe1\x4c\x51\xd6\x62\xf7\x7f\x15\x3a\x0b\xa3\x8a\xb3\x7e\xef\xeb\xfb\x7e\x92\x98\x83\xf2\x38\x35\xd4\xa1\x16\x25\xa7\x17\xf0\xd3\xf3\x19\xf6\x1a\x74\x1f\x8e\x20\xac\xf9\x1c\x7d\x86\x9f\x49\x8a\x05\xa8\x56\x30\x6d\x99\xc1\xcf\x4c\x61\xac\x5b\x46\x72\x82\x63\x82\x96\x41\xf5\x4d\x51\x75\x4f\x2b\xe4\x50\x4e\x0c\x3d\x15\x23\x6b\x0b\xbd\x8d\xa1\x7b\x2a\x46\xa3\xb0\x94\x2f\x10\x99\x8d\xa3\xf2\x9e\x4c\x8b\x91\xa9\xf0\x0b\xaf\x93\xca\xea\x5e\xce\x4b\x74\x6e\x8c\x4f\x8b\xd1\x2f\x1d\xaa\xf1\x79\x4c\x50\x92\xa3\x09\xea\x8a\x98\xc1\x4f\x4d\x43\x61\x25\xc5\x47\x06\xbe\x0e\x42\xed\xbf\xfe\x5a\x20\x32\xab\xf8\x78\xab\x54\x33\xbb\x06\xb5\xe5\xd5\x8a\x4b\x35\x45\x64\xa6\x5d\x3b\x2f\xe7\x5a\x89\x2c\xa7\xa8\x74\x3f\x2c\x65\x8a\x8c\x88\x9d\x21\xd6\x8b\x6a\x8a\xde\x76\x8e\x4c\x2d\x28\x53\xc4\x68\x3d\x71\x40\x1d\x09\x65\xb0\xcb\xf2\x50\xfb\x75\xfc\x14\x6b\xbb\x40\xe4\x18\x72\xba\x73\xf5\xa9\x97\xe3\x57\x02\xf6\x11\x12\xbc\xe6\xe5\xb9\xd5\x9d\xe0\x96\xe1\xf0\x80\xfc\xef\x27\x03\xd9\x6b\xe0\xeb\xe6\x4c\x5a\x06\xc6\x7d\xed\x3d\x5d\x9b\x7e\x98\x99\x25\xb9\x58\xa0\xb2\xd4\xa7\x0e\xda\xf7\x42\x68\xc2\x17\xf8\xa3\xa5\x02\x2a\x5d\x7a\xa3\x2d\xe0\x0a\x84\x44\x17\x0b\xeb\xe4\xbf\xcd\xf7\x53\x4f\x99\x7d\x05\x35\x2e\xaf\xd6\xef\xae\xb1\x22\x5b\x1d\xa4\x33\x70\x70\x3b\x81\xcb\x3a\x3a\x80\xc7\xec\x6a\x79\x0c\x32\xc3\xe2\x61\xf6\x99\x5f\x72\xa6\x4c\xc7\x1a\xe8\xcc\x3f\x9d\x7f\x93\x23\xa0\xb9\x09\xfc\x4f\xf7\xcf\xbc\x3c\xef\x4c\x1c\x09\xd0\xe7\xfa\xbb\x1b\x2c\xb3\x43\xe2\x06\x68\x1e\x84\x44\x43\xfb\xe4\x2f\x35\xc2\x79\x39\x6f\x1e\xec\x15\x5e\x0f\x13\xef\xf7\xcb\xfa\x42\x7b\x38\x14\x35\xf5\xa3\xf6\xe7\xc3\x04\xb9\x6d\x62\x6c\xa0\x64\xa7\x78\xa1\xd1\x35\xa2\x33\xb3\xe5\xfa\xe6\xd0\xcd\xf0\x5c\x37\x18\x99\x60\x5d\xbe\x39\xb4\x57\xd0\x29\xbf\xbd\xbb\x96\xef\x2e\x3d\xc6\x72\x1a\x49\x4e\xac\x2d\x0b\x30\xcd\x01\x4c\x07\x27\x33\x4d\x27\x73\x38\x50\xa4\xd7\x18\xda\x69\x6d\xe5\xcd\x42\x33\x24\xc1\x46\xf1\x2c\x9c\xe0\xec\x63\x3e\x0e\xad\xd0\xc2\xb6\x88\xb1\x30\xa3\xa6\xf0\xd2\xf5\x67\x00\x00\x00\xff\xff\x7c\xc3\xa6\x8d\x58\x19\x00\x00")

func collectionGoBytes() ([]byte, error) {
	return bindataRead(
		_collectionGo,
		"collection.go",
	)
}

func collectionGo() (*asset, error) {
	bytes, err := collectionGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "collection.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cosmosdbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x5f\x6f\xdb\x36\x10\x7f\x96\x3e\xc5\x55\x40\x02\xa9\x55\x68\x27\x6b\x8b\xc1\x83\x1f\xda\xc4\xed\xba\x36\xc1\xb6\xb8\x4f\xed\x80\x32\xd4\x29\xe2\x2c\x91\x2a\x49\x25\x75\x8d\x7c\xf7\xe1\x48\x29\x56\x62\xa3\x28\x30\x03\x86\xc8\xe3\xf1\xee\x77\xbf\xfb\xc3\x96\x8b\x15\xbf\x46\x10\xda\x36\xda\x16\x57\x71\x2c\x9b\x56\x1b\x07\x69\x1c\x25\x57\x6b\x87\x36\x89\xa3\x44\x98\x75\xeb\xf4\xa4\x6a\xb8\x18\x6d\x6d\xc5\x4f\x5e\xbc\x24\x01\x2a\xa1\x0b\xa9\xae\x27\x57\xdc\xe2\xcb\xe7\x0f\x44\xff\x5a\xad\x48\x50\x36\x8e\x3e\x52\x4f\xa4\xee\x9c\xac\x69\xa3\xd0\x4d\x2a\xe7\xda\x61\xed\xf0\x9b\x6b\x8d\x76\x7a\x10\x74\xc6\xeb\x59\x67\xa4\xba\xf6\x50\x9c\x6c\x30\x89\xb3\x38\x9e\x4c\x60\x61\x8c\x36\x60\xb0\x35\x68\x51\x39\x0b\x5c\x01\x92\x2c\x76\xeb\x16\xfb\x63\xeb\x4c\x27\x1c\x6c\xe2\xe8\xd2\x71\xd7\xd9\x53\x5d\x20\x48\xe5\xe2\xc8\xaf\xc2\x2f\x38\x80\x2f\x04\x76\x96\x08\x5d\x60\xf2\x25\x8e\xce\xd1\x5a\x22\x67\x47\xa1\x09\x07\xc9\x97\xf8\x2e\x8e\xcb\x4e\x09\x48\x7b\x77\x59\xf8\xa4\xd9\x70\x63\x13\x47\x06\x5d\x67\x14\x94\x8d\x63\x97\xad\x91\xca\x95\x69\x72\x50\xc0\x81\x9d\xc1\x81\x4d\x72\x40\xb6\x45\x46\xbb\xe1\xdb\xbb\xcf\xc8\xc9\x64\x02\xef\xac\x37\x3d\x8a\x22\x18\xb6\xe0\x4c\x87\x20\x4b\x8a\x1d\xa4\x05\x5d\xc2\x28\x7e\xae\x0a\x90\xce\xc2\xf6\x1e\x19\x6b\xb8\x13\x15\x5a\xb0\x5b\xa9\x8f\x63\xc7\x49\x4a\x46\x3d\xa9\xf9\x48\x99\x08\xcc\xe0\x4a\xeb\x9a\x02\x0c\xae\x73\xd0\x2b\x98\xcd\x69\xc9\xd2\x40\xc6\x6f\x24\xda\xc4\xd1\x40\x01\x1d\x8d\xf0\xcf\xe7\x63\xff\xd1\xdd\x96\x2a\x5e\x5b\xec\xc3\x5e\x18\xb3\x58\xf2\xeb\xbf\xf1\x6b\x27\x0d\x16\x14\xa0\xab\x30\x40\xea\x19\x20\x69\xe9\xa5\xa4\x09\xa5\xc4\xda\xeb\x29\xed\xa0\xd5\x6d\x57\x73\x87\xa0\x15\x70\xb2\xf7\xe7\xc7\x25\x68\x03\x67\x8b\x0f\x8b\xe5\x02\x74\x8b\x86\x3b\xa9\x55\x7c\xc3\xcd\x8e\xaf\xb9\x4f\x9a\x8f\xa5\x4c\x13\x6f\x5c\x5a\x30\xfd\x71\x92\x0d\xc9\x17\xf0\xb4\xe0\x8e\x53\xf5\x9f\xd6\x12\x89\x1b\xde\xb9\x4a\x1b\xf9\x1d\xc9\x18\x5a\x97\x1a\xfc\x0a\x4f\xa9\xd8\x59\x2f\xc9\xc1\xa0\xd5\x9d\x11\xb8\x5c\xb7\xb8\xdd\x7d\x90\x6a\xd5\x57\x4f\x46\xe4\x15\x84\x7e\x36\x07\xaa\x7c\x76\xa1\x6f\xd3\x8c\x7d\x5c\x9e\xa6\x19\x7b\xa3\x4d\xc3\x5d\x9a\x9c\x6b\x95\xc3\xf4\x04\xfe\xe0\x0a\x4e\xa6\xd3\x97\x70\xfc\x62\x36\x7d\x3e\x9b\xbe\x80\xb7\xe7\x4b\x02\x19\x55\x74\x9f\xba\x97\x5d\xe0\x6d\x1a\xfa\x96\x96\x39\x08\xd6\x70\xeb\xd0\xbc\xc7\x75\x16\x47\x14\xed\x9b\xbe\x44\xab\x1c\x92\x03\xfb\x59\x8d\xff\x9f\x55\x92\xf7\xd0\x2c\x5b\xea\x0f\xfa\x16\x0d\x05\xc6\xce\xd1\x55\xba\xc8\x7e\x14\xd2\xee\x45\x0a\x2c\x23\x78\x64\xe1\x77\xe4\x05\x1a\x76\x89\x2e\x4d\x5e\xf5\xdc\xf9\xc4\x24\x39\x74\xa6\x66\x7f\x75\x68\xd6\x0b\x2b\x78\x8b\xe9\x83\x4e\xa2\x52\x9f\x87\x20\x0e\x6f\xd0\xcc\x8f\xd9\xf4\xd0\xca\xeb\xb9\x6f\xad\x30\x8f\xd8\xa5\x2b\x16\xfd\x3c\x62\x7e\x81\x4b\x7d\xe9\xd1\xa4\x15\xbb\xec\x9a\x54\xc9\x3a\xa3\xdf\x2e\x96\x6f\x47\x8d\x3d\x22\xa4\x49\x0e\x1e\xf0\xb6\xe5\xf7\x64\xbd\xd0\x69\xe3\xa9\xc8\xa1\xe5\xae\xfa\x89\x14\xe7\x80\xdf\x5a\x14\x0e\x8b\x87\xe3\x29\x07\xa9\x72\xd0\x9d\xa3\x0d\x9a\x92\x0b\xdc\xdc\xe5\x50\x79\x68\x16\x7c\x21\x05\x9c\x59\xdf\x0b\x7e\xd2\x7c\xcd\xfd\x14\xa0\x74\x93\xc6\x05\xde\x0e\xf5\x37\xe0\x4a\xe8\xc0\xce\x26\x93\xe4\x99\x60\x03\xfe\x57\x42\xe8\x4e\xb9\x67\x09\x2b\xb4\xe8\x1a\x1a\xa6\x8c\x7f\xef\x0c\x32\xa1\x9b\x49\xf2\x2c\x04\x43\x2c\x0d\xdd\x0e\x4f\xe6\xb4\x7f\xd4\xdd\xd4\xc4\x5e\x43\xaa\xb1\xc2\x55\x57\x12\xa4\x43\xff\xa0\xb0\xd7\x5d\x59\xa2\xd9\xdc\xc5\x51\xd4\x63\xa5\xa9\x4a\x58\x43\x6e\x4c\x7a\xd5\x95\x59\x9f\xa8\x54\xaa\x2c\x8e\xf6\x38\x7d\xe0\x95\x66\x87\x4f\xdd\x6b\x5d\xac\x61\x0e\xe1\x89\x61\x17\xba\x3d\xad\xb5\xed\x2d\xf6\x2a\xe3\xec\x9e\x6a\xe5\x50\xb9\x23\x4a\x4f\x92\x43\xc2\xdb\xb6\x96\xc2\xd7\x5d\x78\xb8\xb2\x10\x51\xa9\x0d\xac\x72\xb8\x21\xb0\x86\xab\x6b\xbc\x4f\xc4\xe6\x81\xd5\x4f\xf7\x2f\x18\x3b\xe5\x4a\x2b\x29\x78\x7d\xfe\xee\x7c\x11\x4e\xdf\xe3\x3a\x5d\x65\xff\xc0\x1c\x6e\x82\xd9\xbd\xc5\x76\x83\xc6\x86\xba\x4f\x4e\xa6\xc7\xbf\x1e\x1d\x9f\x1c\xfd\x72\xec\xdb\x58\xb0\x7d\x53\xe5\x47\x45\x16\xba\xcb\xb6\xf7\x55\x21\x58\x25\xd8\x99\xa6\x7b\x3f\x91\xca\xa8\xc0\x12\x69\xca\xda\xd6\x33\xcb\x3c\x9b\x69\x16\x72\x3c\x50\x30\xba\xee\x79\xda\x4f\x52\x54\x60\x8d\x0e\xd3\x5e\x96\xc3\x2a\xeb\xf3\xb6\x4b\xae\x77\x18\x88\x09\x77\xfb\x4b\x9f\x56\x3d\x79\x74\x8f\x08\x2c\xc6\xd5\x73\x86\xa1\x7a\xee\xe1\x66\x71\x54\xb0\x33\x69\x79\x5d\xeb\xdb\x8f\x6a\xa5\xf4\xad\x7a\x43\x8f\x83\x1d\x42\xf0\xaa\xa3\xc6\x7b\x32\xdf\xd7\x8e\x04\x81\x9e\x07\xe2\xca\x3f\x06\xa1\x20\x47\x28\xd9\xdb\x9d\x6a\xca\xe8\x79\xdb\x2d\xa8\x9e\x0b\x16\xc0\xa6\x87\x68\xcc\xc0\xc3\xe3\xd7\xf1\x31\xba\xfd\x9d\x46\x23\xa2\xcf\xc0\xe1\xe1\xff\xc0\xd4\x9b\xde\x22\xd3\x9d\xcb\x86\x32\xf5\x47\x4a\xd6\xf1\x5d\xfc\x5f\x00\x00\x00\xff\xff\x50\x61\x94\x3e\x32\x0a\x00\x00")

func cosmosdbGoBytes() ([]byte, error) {
	return bindataRead(
		_cosmosdbGo,
		"cosmosdb.go",
	)
}

func cosmosdbGo() (*asset, error) {
	bytes, err := cosmosdbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cosmosdb.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _databaseGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\x5d\x6f\x23\x27\x14\x86\xaf\x87\x5f\x71\x76\x2e\x22\x4f\x3a\x99\xdc\x54\xbd\xb0\xe4\x8b\xca\x8e\xd2\x68\x9b\xb4\x5a\x6f\xa5\x4a\xab\xd5\xee\x18\x8e\x6d\xda\x31\xb8\x70\xa6\x69\x14\xe5\xbf\x57\xc0\x7c\xc0\xd8\x5e\x69\x7d\xe1\x04\x38\x1f\x2f\x0f\x2f\xf8\x58\xf3\xbf\xeb\x1d\x02\xd7\xf6\xa0\xad\xd8\x30\x26\x0f\x47\x6d\x08\x66\x2c\xcb\x51\x71\x2d\xa4\xda\xdd\x6e\x6a\x8b\x3f\xfd\x98\xb3\x2c\x57\x48\xb7\x7b\xa2\x63\xce\x0a\xc6\x6e\x6f\x61\x55\x53\xed\x56\xc1\xe0\xd1\xa0\x45\x45\x16\x6a\x10\xdd\x2c\xa3\x97\x23\x8e\x31\x96\x4c\xcb\x09\x5e\x59\xf6\xb0\x82\xe1\x63\xc9\x48\xb5\x83\xaf\x7f\x59\xad\xe6\xb9\x14\xa5\x3e\x48\xc2\xc3\x91\x5e\xf2\xaf\x2c\xfb\x80\x56\xb7\x86\xa3\xcb\x48\x23\xbf\x98\x69\xec\x47\x79\x40\x4b\xf5\xe1\x08\x00\x52\x91\x2b\xde\xc7\x92\x4d\x43\xd7\xd8\x6c\xcf\x0b\xf8\x62\xb1\xd9\xa6\xc1\x77\x1f\xeb\xdd\x85\x60\xa4\x7a\x97\x06\x2f\x75\xd3\x20\x27\xa9\x95\x9d\x06\x73\xdd\x34\x13\x1d\x7f\x58\x34\xf6\x7c\xe9\xd6\x2d\x25\xd1\x6f\x09\x72\x1b\x33\xef\x89\xdb\x14\xb9\x8d\x98\x2f\x75\x1b\x98\x0c\x70\x62\x40\xdc\xad\x5e\x44\xdf\x49\x8b\x13\x4e\xe8\x8f\x3d\xe1\xd3\xe7\xe1\xcc\xbb\xf0\x61\x71\xba\x21\x2f\xb7\x57\xbf\x6c\x24\x2a\x8a\x34\xef\x39\x24\x9f\x6b\xe7\xbd\x2a\x84\xb1\xac\x4f\xfb\x99\x7b\xf5\x9d\x4a\x96\x1d\x6a\x4b\x68\xde\xe3\x4b\x97\xf5\xe9\xf3\xe6\x85\x70\x82\xaf\xeb\x25\x63\xbf\x02\x0f\x95\x13\x86\x7d\xa0\x22\x34\xdb\x9a\xa3\x67\x69\xb0\x26\x9c\x5d\xf7\x31\x05\x8c\xff\x97\x80\xc6\x68\x53\xb0\xec\x57\x69\x69\x56\x0c\x85\x1e\x08\x4d\x4d\xda\xb0\xec\x1e\x69\x16\xc4\x9e\x4f\x5c\x61\x83\x69\x79\xbf\x72\xc2\xcb\x35\xe8\xab\x46\xd4\xae\x53\x9e\x2c\xe3\x5a\x91\x54\x6d\xed\x5c\x39\x50\x12\x5a\xe1\x00\x76\xa3\x75\x33\x01\x34\x14\x4e\x11\xc9\x7e\x17\x09\xa4\x31\x38\xc6\xf4\x84\xff\x39\x00\xe3\x46\xec\xb0\xc7\xd0\xeb\x09\x9f\x27\x98\x0d\x52\x6b\x94\xeb\xa8\xf0\xf9\xe4\x60\xb6\xad\xe2\xa7\x49\xb3\x3d\x4f\x9c\x51\xc2\xc4\x19\x25\x8c\x96\x18\xb8\xa7\x35\x7a\x61\x4e\xf6\xbf\xb5\x71\xa3\x0e\x3a\xcb\x38\xcc\x17\x70\x95\x42\x7d\x65\x59\xb6\xe7\xf3\xd4\x9e\x7b\x5e\xb2\x6c\x6a\xcb\xf9\x89\x1a\x96\xbd\xb9\xaa\xd5\x20\xca\x37\x87\x05\x84\x77\xb6\x5a\x93\xb8\xeb\x9e\xde\x6a\x85\x5c\x0b\x5c\x7b\xd1\xb3\x21\xa1\x60\x99\xdc\xfa\xa4\x77\x0b\x50\xb2\x71\xaa\xb3\x80\xce\x0d\x7d\xbd\xd0\xa5\x9b\xe4\xa5\x9b\x77\xd4\x3d\xc2\x19\x87\x89\x49\x0a\xe8\x3c\xad\xf0\x59\x6c\x20\x76\x76\x3c\x2c\x47\x30\x1e\x55\xd0\xcd\x2b\xa1\x67\xfe\x00\x1e\x91\xf6\x5a\xfc\xae\x2d\x95\x90\x8b\x8d\xcd\xc7\x3f\x79\x09\x3e\x64\x4d\x35\xb5\x36\x74\x13\x25\x5c\xf9\x86\x25\x5c\xb9\x2f\x25\x9b\xa2\xd7\xfc\x4d\xb1\x17\xae\x96\x93\xd4\xed\xf8\xea\xdc\x25\x79\x4d\xeb\xcc\x81\xbf\x7d\xb3\x8d\xbb\xa8\x62\x23\xc5\xe8\x9a\xef\x87\x71\x8f\x1d\x8b\xdb\xfc\x07\x57\x2b\x01\x33\xcc\x45\x68\x7e\x7b\x5f\x86\x43\xfc\x3e\x24\xdd\xa3\x91\x1e\x9e\x17\xe7\xb4\xc9\x2d\x88\x4d\xe5\x7f\xc9\x16\x0b\xc8\xf3\xd8\x31\x77\xc6\xb8\x85\x0f\xf8\x4f\x2b\x0d\x0a\x67\x9c\x6c\x8f\xb5\x70\x3f\x4d\xf3\x45\x90\xf6\x8b\x1f\xbf\x8e\x2b\xd5\x1a\x69\x96\x3f\x6c\x6f\x1e\x6b\xe2\xfb\xbc\xec\xcb\x17\xa3\xe7\x26\x20\x82\xc0\x68\xdf\xd5\xc3\xea\x14\x86\x9f\x8c\x68\x3c\xe9\xa5\x56\xe4\x6f\xa8\x87\xe2\xbf\x3a\x0d\xc5\x08\x44\x8e\x40\xe2\x03\x2f\xa0\x7f\x83\xc4\xc6\xc2\xe4\x1d\x8a\x8e\x4e\x6e\x41\x56\xfe\x45\x1c\xb9\x84\x0b\x74\x19\x84\xcf\x49\x9e\xd6\x77\x03\xd9\x04\xd2\x9f\x37\x8f\xf6\x66\x19\x05\xe6\xe5\x24\xb3\x08\xbd\x82\x81\xe4\x25\x03\x5d\xbc\x4c\xb1\x63\x6c\x44\xe7\xe2\x23\x11\xda\x4d\xd4\x2f\xfa\xc4\xea\xfe\xbc\x6a\x57\x30\x40\x5a\x4c\x77\xee\x3d\xc5\x22\x9f\xfe\x1f\x00\x00\xff\xff\x73\xc2\xdd\x08\x59\x0a\x00\x00")

func databaseGoBytes() ([]byte, error) {
	return bindataRead(
		_databaseGo,
		"database.go",
	)
}

func databaseGo() (*asset, error) {
	bytes, err := databaseGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "database.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _documentGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xcd\xaa\xc2\x40\x0c\x85\xd7\x9d\xa7\x08\x5d\x5f\xe8\xfe\x3e\x84\xe8\xc6\x8d\x08\x8d\x35\x94\xaa\x99\x19\x93\x54\x28\xe2\xbb\x4b\x7f\x9c\x32\x9d\xd5\x24\xe7\x7c\xe4\x8b\xd8\xdc\xb1\x25\x68\x82\x72\xd0\xeb\xc5\xb9\xaa\x82\x43\x4f\x32\x80\x50\x14\x52\xf2\xa6\x80\xf0\x1c\x57\xce\x86\x48\x4b\xaa\x26\x7d\x63\xf0\x76\xc5\x3c\x4f\x4f\x4d\x3a\xdf\xce\xff\xfa\xa6\xc1\xff\x97\x13\xf8\x17\xb8\x33\xe2\x68\x43\x59\xbb\x62\x8f\x82\x4c\x46\xa2\x70\x3a\xa7\xe1\x07\xc4\x94\x66\xd4\x67\x32\x5b\xdb\x99\x5d\x62\x66\xc3\xb5\xb5\x5a\xee\x90\x29\x09\x2e\xa7\x3c\x32\xe5\x6a\x47\x7c\xf4\xb4\x69\xbd\xc6\xdd\xc6\xe5\x1b\x00\x00\xff\xff\xa1\x09\x70\x18\x37\x01\x00\x00")

func documentGoBytes() ([]byte, error) {
	return bindataRead(
		_documentGo,
		"document.go",
	)
}

func documentGo() (*asset, error) {
	bytes, err := documentGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "document.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4b\x6f\xe3\x36\x10\x3e\x8b\xbf\x62\x56\x87\x40\x8a\x65\xe9\x6e\xc0\xa7\x24\x48\x83\x36\x69\xba\x9b\x43\x81\xa2\x40\x68\x6a\x6c\x73\x2d\x8b\x5a\x92\x42\x6a\x18\xf9\xef\x05\xa9\x87\x45\x3d\x9c\xa6\xd8\xa6\x6d\x0e\x91\x25\xce\xf3\xfb\x66\x86\x53\x50\xb6\xa3\x1b\x04\x26\xd4\x5e\xa8\x74\x45\x08\xdf\x17\x42\x6a\x08\x88\xe7\xe7\xa8\x93\xad\xd6\x85\x4f\x88\x57\xec\x36\xe0\x6f\xb8\xde\x96\xab\x98\x89\x7d\xf2\x95\xef\xe7\x7b\x9e\x6b\x94\xc9\x46\xcc\x1b\xf5\xa4\xd8\x6d\x92\x0d\xe6\xed\x7b\xfb\x23\x2d\xf7\xfb\x83\x4f\x42\x42\xf4\xa1\x40\xd0\xb8\x2f\x32\xaa\xf1\x2a\xe3\x98\x6b\x50\x5a\x96\x4c\xc3\x91\x78\x97\x29\xd5\x74\x45\x55\x7d\x42\xbc\x82\xea\x2d\xb4\x7f\x4a\x4b\x9e\x6f\x88\xc7\xd5\x23\x95\x9a\x6b\x2e\x72\x4c\x61\x25\x44\x46\x5e\x09\x49\x12\x78\x72\x0d\x73\x05\xb4\x75\x06\xac\xb2\x69\x23\xe8\x0b\x9a\x54\xd6\x94\xa1\x09\xe2\x4a\x22\xd5\x18\x54\xce\x22\xb8\x2c\x76\x9b\xb8\x91\x0f\x21\x70\xde\x23\x40\x29\x85\x0c\x89\xf7\x13\x57\x3a\x08\x5b\xc3\x77\x1a\x25\xd5\x42\x12\xef\x16\x75\x6b\xab\x7a\x4e\x1b\xf9\x8c\x45\x46\xd9\xbb\x7d\x5f\x63\x86\xd3\x11\x5b\x29\xe2\xfd\x52\xa2\x3c\x04\x97\xf6\x31\x12\xe7\x6b\x8f\x1b\x93\x4f\x73\xd8\x65\xc8\xe5\x8e\x78\x4c\xe4\x9a\xe7\x25\x35\x64\xb4\x04\xa5\x22\xc7\x96\xb5\x86\x1f\xc7\xbc\x0d\xe3\xaf\xd8\xff\x66\x04\x1b\x53\x55\xf4\xef\x71\xda\x29\x8a\xd6\x9b\x5b\x16\xbc\x41\xc0\x29\x8c\x93\x70\xb7\x34\x1e\xf0\x0f\x43\xb2\xcb\x83\x6a\x89\xa8\xfc\x3d\xe0\x4b\xaf\xbc\x24\xea\x52\xe6\xc6\x6b\x8e\x2f\x83\x82\x5c\x97\x39\x1b\x2a\x05\x4c\x64\x19\x83\x2b\x91\x65\xc8\x4c\x9e\xd5\xe7\x08\xcc\x77\x9e\x42\x43\xf6\xb0\x17\xc2\x7e\x75\x1f\x89\x57\x45\x00\x17\x2e\xba\x47\xe2\x79\x6e\xc7\x2d\xac\x79\x16\x07\x97\xac\xe7\x38\x8c\x5d\xc9\x88\x78\xb6\x3b\x17\xa7\xf6\x3c\xa3\x6b\xfb\x78\x06\x7e\x62\x8e\x54\xe2\xc3\xac\xce\xc3\x98\x71\x52\x58\x80\x9b\x52\x44\xbc\x57\x03\xac\x45\x29\x60\xd0\x2b\x90\x10\xea\x76\x2d\x1a\x95\x1d\x1e\x5a\x70\x72\x7c\x69\xd1\xee\xf7\xd2\xf8\x81\xe5\xb2\xe6\xd3\x00\xb7\x45\x9a\xa2\x54\xb0\x58\x82\x19\x86\xf1\x0f\xf6\xfd\xf8\x4a\x3c\xbe\x06\xc7\xe7\xa7\x25\xf8\xbe\x51\x69\x74\xe2\x2f\xa8\x03\xff\xd7\xf9\xbd\x9a\x5f\x0b\x56\xee\x31\xd7\xe9\x6a\xfe\xd8\xd1\xf1\x23\x78\xfe\xcd\x7f\x9e\x75\xed\xcc\x9e\xfd\xdf\x9f\x43\x93\xb4\x67\x22\x59\x02\x8b\x53\x11\x58\xdf\xf7\xa8\xb7\x22\x7d\x14\xca\x54\x81\x85\x74\xe6\x27\xa9\x60\xca\x8f\xc0\xaf\x9f\xd5\xf7\xa8\x0a\xf6\x8b\xa6\xba\x54\x15\x40\x69\x04\x17\x1d\x38\xa2\x53\x2d\x44\x50\x07\x1c\x36\x75\x72\x16\xef\x89\x41\x37\x56\x65\xdd\x19\x72\x74\xed\x2c\x80\x9d\xa7\xd5\x8c\xcd\x2e\x2e\x51\xdb\x37\x6d\xf1\xff\x8f\x49\xbc\xc5\x3e\x87\x89\x3f\x3b\x25\xd8\xe7\x73\x5c\xa6\xc3\xf1\xcf\x3f\x46\x90\xf3\xec\xef\xb3\xda\xdc\x3c\xff\x50\x1b\xf1\x75\xd7\x48\x7c\xf3\x44\x37\xb0\x6c\xb1\xae\xeb\xc6\x26\x70\x23\xa5\x39\xfd\x8c\xdf\x4a\x2e\x31\xb5\x18\x4e\xf3\xe7\xb0\x74\xb7\x9e\xdf\x53\xcd\xb6\x7e\x34\x70\x16\xfe\x8b\xfd\x5a\x8e\x50\xdd\x8d\xef\xee\x7a\x9a\xee\xbe\x5c\x8f\xf2\xef\xd3\xd1\xf5\xfa\x30\x4a\xfd\x14\xef\x96\xda\x9a\xd9\x37\x68\xfd\x3e\x8c\x7e\x3c\x9d\x75\xf8\x7d\x3e\x2b\xb4\xa6\x3b\xf3\x2c\x9f\x53\x64\x3e\x88\x2b\x91\x6b\x7b\xbf\xdb\x2e\xb0\xff\x5a\x12\xcf\x91\x57\xad\x75\xd5\x96\x34\xb5\xdc\x8d\xcd\x66\x67\x01\x1b\x0e\xe7\x08\xac\xc9\x45\xf5\xe8\x8c\x6a\x7e\x0a\xa1\x3b\xde\x43\x68\x76\xa3\xe6\x54\xc1\xc8\x96\xe4\x8e\x04\x1e\xdb\x9d\xed\x54\x2b\x06\xf7\x37\xc6\x35\x8f\x9d\xe5\xef\x1c\xed\x57\x1d\x41\x3f\xea\x69\x86\x95\xaf\xaa\x67\xf9\xd8\x78\xe6\x13\x57\x2c\x1f\x5e\xb1\xc3\xf1\xab\xba\x3d\xc8\xd7\x36\xf7\x4f\x4b\x23\x34\x48\xb7\x97\xd1\xb2\x51\x8c\x6f\xc7\x33\x31\x06\x2b\xe0\x96\x7d\x34\x6c\xef\x91\x61\xd3\x77\x48\x73\x78\xff\x18\xd6\xce\x36\xe4\x9d\xb2\x15\x66\xf0\x7d\x92\x25\x9a\xec\x1c\xf9\xba\x2f\xe6\x4f\x87\x02\x8d\x10\x2d\x8a\x8c\x33\x9b\x6e\x62\x35\x67\x5f\x55\x0d\x8a\x09\xcd\x5d\x87\xdf\x1c\x07\x16\x8d\xf9\x4d\x4e\x57\x19\x32\x29\x94\x6a\x67\x41\x37\xa0\x0f\xac\xbc\x6a\xbb\x7b\x67\xe9\x5d\xf0\xd8\x42\xf1\xdf\xab\xbf\x3f\x03\x00\x00\xff\xff\x5a\x9f\xd7\x0e\x62\x10\x00\x00")

func templateGoBytes() ([]byte, error) {
	return bindataRead(
		_templateGo,
		"template.go",
	)
}

func templateGo() (*asset, error) {
	bytes, err := templateGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"collection.go": collectionGo,
	"cosmosdb.go":   cosmosdbGo,
	"database.go":   databaseGo,
	"document.go":   documentGo,
	"template.go":   templateGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"collection.go": &bintree{collectionGo, map[string]*bintree{}},
	"cosmosdb.go":   &bintree{cosmosdbGo, map[string]*bintree{}},
	"database.go":   &bintree{databaseGo, map[string]*bintree{}},
	"document.go":   &bintree{documentGo, map[string]*bintree{}},
	"template.go":   &bintree{templateGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
