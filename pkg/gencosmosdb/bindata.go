// Package gencosmosdb Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cosmosdb/collection.go
// cosmosdb/cosmosdb.go
// cosmosdb/database.go
// cosmosdb/document.go
// cosmosdb/template.go
// cosmosdb/trigger.go
package gencosmosdb

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _collectionGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x6f\xdb\x38\x12\x7f\x96\x3e\x05\x57\x0f\x85\x9d\xb8\xce\x7b\x00\x3f\x2c\x92\xdd\x6c\xd0\xa6\x1b\xb4\xb9\xdb\x03\x8a\xa2\xcb\x48\x63\x9b\x17\x99\xd4\x91\xd4\x36\xb9\x20\xdf\xfd\x40\x52\xb4\xf8\xd7\x72\x72\x77\x79\x28\x2c\xcd\xcc\x8f\xf3\x7f\x46\x6c\x87\xeb\x07\xbc\x01\x54\x33\xb1\x63\xa2\xb9\x2f\x4b\xb2\xeb\x18\x97\x68\x56\x16\x15\x05\x79\xb6\x95\xb2\xab\xca\x79\x59\x9e\x9d\xa1\x0b\xd6\xb6\x50\x4b\xc2\x28\xe2\xd0\x71\x10\x40\xa5\x40\x18\xd5\xfb\xf7\xa5\x7c\xea\xc0\xe5\x13\x92\xf7\xb5\x44\xcf\x65\x71\x7d\x89\xd2\x7f\x42\x72\x42\x37\x29\xca\x9f\xff\x14\x8c\x9e\x57\xa4\x59\xb0\x1d\x91\xb0\xeb\xe4\x53\xf5\x67\x59\x7c\x06\xc1\x7a\x5e\x43\x84\x38\x89\xf4\x9d\x87\x58\x77\x64\x07\x42\xe2\x5d\x17\x4a\x10\x2a\x33\xfa\x5a\x2c\x29\x7c\xa8\x2f\xd0\xae\xdf\x66\xe0\x77\x01\xed\xda\x07\xfb\xe5\x0e\x27\x25\x8e\x00\x03\x89\x37\x3e\xd8\x25\xab\xfb\x9d\x8e\xd5\xab\xc1\x1a\x56\x87\x66\x4a\xc6\xa1\xb9\xe5\xac\x86\xa6\xe7\x20\x5e\x63\x66\xc7\x23\xb8\x3b\x4e\x36\x1b\xe0\x91\x6a\x47\xc0\xc9\x41\xd4\x07\xfc\x9b\x00\x7e\x09\x6b\x42\xa1\xf9\xb5\xa7\x3a\x0b\xc5\x91\x80\x7d\xb3\x0e\xc0\x2e\x18\x5d\xb7\xa4\x7e\x8b\xe7\x6a\x2b\xea\x23\x5e\xd3\x06\x1e\x09\xdd\xdc\xb2\x96\xd4\x4f\x8e\xdc\x49\x96\x62\xcb\xc0\xa3\xfb\xa8\xb7\x98\x4b\xa2\x4c\xfd\x00\x4f\x9e\x36\x27\x59\xca\x80\xda\x39\xf4\xb4\xed\xaa\xdc\xda\x5e\xb1\x0c\x9a\x9d\x64\x29\x03\x66\x9d\xa1\xfb\xf8\x57\xc0\x44\x87\x25\xc1\xad\xc2\x23\xa3\x33\x4f\xb2\x94\x01\x7f\x13\xd0\x3d\xdc\x17\xdd\xaa\x02\x67\xba\xed\x8a\x22\xeb\x49\xd4\x69\xaa\x69\x5a\x81\xc4\xd8\xb8\x7e\xee\x25\xdb\x61\x49\x6a\xad\xc2\x3d\x63\x6d\x3a\xe2\xd8\xf2\xa5\x03\x7e\xc3\x1a\x40\xc1\x29\xfa\x5d\x10\x5e\xf5\x2e\x44\xa8\xdb\xbe\x81\xe6\x16\xcb\xad\x40\x5f\xbf\xb9\xcf\x7e\x82\x38\x7c\x41\x3b\x79\x3c\x0e\x02\x1e\x73\x10\x29\xb7\x6a\xf5\x0f\xba\x16\xed\x58\x03\x29\xff\x6a\x51\x53\x44\x39\xe0\x9a\x51\x21\x31\x95\xa2\xd4\xbf\xd4\x44\x8a\xb9\x2e\x18\x15\x44\x48\xa0\x32\x05\xb1\x42\xd5\xc8\x50\xa5\xe4\x3f\xe2\x7f\xdb\xb2\x48\xcb\x2b\x06\x3b\xff\x3c\xaf\x85\x76\x1b\x12\xea\xb0\xdc\x5a\x83\x1d\xee\x31\x9d\xac\xcb\x6d\x07\xd9\xd7\xa1\xdc\x26\x12\x07\x4c\xb4\x1a\x78\xf4\xf2\x04\xb2\xc1\x49\xc5\xc3\x09\x80\xa3\xc8\x25\x96\xf8\x4e\x11\x0c\x65\xff\x38\x9c\xd3\x0c\xcf\xbe\x52\x1f\x08\x6d\x1c\x77\xed\x1f\x07\xa1\x07\x42\x83\x01\x7b\xcb\xa1\x26\x42\xad\x02\xfe\x44\xb5\x66\x5b\x72\xce\x9e\xbd\x5a\x09\xbb\x90\xd2\x11\x29\xe3\x1c\x0b\xf7\x02\x61\x76\xed\x09\xb9\xc4\xb2\x0c\x5f\xc6\xde\xee\x0b\xae\x50\x65\x68\x55\x20\xf1\xa9\xdf\xdd\x03\x4f\x4b\x18\x5a\x28\x71\xcb\xf6\xee\x88\x24\x34\x2d\x16\x68\x9f\x36\x8c\x66\x04\x34\x2d\x14\xf9\x48\xa8\xb5\x25\x12\x19\x69\x63\x72\xdb\x78\xa6\x3c\xad\x02\xeb\x38\x59\xf3\x85\x0e\xd6\x2f\x73\xce\x55\xc4\xdf\xb0\xd8\xfa\xa9\xb3\x42\x95\x7a\x59\x39\x4c\x9f\x31\xdd\x40\xc8\xa4\x5f\xba\x5c\x5f\x4c\xff\xf7\xb9\x86\x97\xd6\x22\xb7\xe9\x05\x46\xd9\x3e\xe7\x94\xab\xc7\x1d\x94\xeb\x50\xab\xb9\x52\x35\xe9\xea\x4d\x5a\x6f\x3f\xde\xcf\x58\xf4\x00\xc3\xb4\xf1\x98\xfd\xd3\xd4\xae\xf1\xf5\x5b\xb0\x60\x38\x47\x8b\x74\x45\xba\x88\xfa\x5d\xb6\x24\xff\x0e\x3c\x51\x90\xe3\x21\x7f\x19\xfa\x84\x89\x51\xaa\xf8\x66\x3a\x19\x13\x49\x39\x89\x13\xd1\x12\xf9\x13\xf2\xe8\x34\x8a\x04\xf7\xa9\x64\xbf\x55\x32\x3b\x4a\xf0\xe5\x62\xb8\x10\xdf\xb3\x79\x4b\x41\x16\x65\x0c\x99\x99\xeb\xe9\xbf\x9c\xb8\x3b\xf7\x77\xd1\xbc\x4f\x48\xd9\x31\x7d\x60\xef\x1c\xe3\x97\x58\xbf\xa2\xe1\x92\x38\xc3\x6e\xf4\x6f\x3d\xc3\xca\x27\xf2\xe6\xa0\x1f\x8e\x0c\x88\xb3\x4a\x1c\x84\x73\x92\xeb\x20\x5f\x22\xd1\x0e\xf1\x7f\xc4\x42\xfe\xc1\x89\x04\xfe\x07\xa1\xe2\x30\xb4\x5e\x1b\x5c\xf6\xea\x30\xf6\x45\x2f\x24\xdb\x1d\x97\x35\x6a\xa5\xd1\xec\x36\xd1\xa3\x65\xd9\xf3\xe7\xb8\x2a\x6b\xd7\x92\x8d\xf1\x60\x24\x34\xe6\xf3\x5d\x8a\xee\x2e\x06\x32\x5c\x0a\x5e\x92\x7a\x84\x43\x3b\xd2\x44\x0f\x6e\x91\xd6\x27\x1c\xe0\x49\x7a\x22\x82\x29\xbe\x2b\x60\x1b\x8e\xbb\xed\x53\x1a\x65\x85\xaa\x3d\x47\x7c\xd1\x21\x5c\x13\xc6\x7b\x0e\x11\x5e\x74\x08\xc7\x83\x17\xac\xdf\x77\xd6\xe4\xd2\xf3\xbd\x56\x1c\xf9\x4b\x0d\xbf\x00\xb3\x77\x17\xee\xe9\x5f\xbf\x9d\x38\xb7\x2e\x83\x88\xfd\xee\x77\x18\x27\x9a\xba\x9e\xb3\x9e\xcd\x7e\x53\xe7\x9a\x1e\xb7\xf5\x41\x2e\xed\x83\xa4\x2b\x5e\xe5\x10\x94\x6f\x7e\x59\xef\x24\xd4\xfb\xfa\x2d\x7a\x69\xe5\x63\xee\x63\x3c\x75\x68\xfe\x69\x57\x65\x3c\x75\xf8\x5a\x2c\xd7\x7f\x8f\xbf\x0e\x9b\x40\x38\xea\x1a\x2c\x77\x01\xf6\x8a\xeb\xaf\x29\x35\x8e\xba\xf6\x9a\x02\x89\xaf\xbb\x6e\xf0\xa3\x5e\xe6\x04\xf9\x0b\x8e\x03\xd9\x39\x12\x01\x16\xa1\xfa\x3b\xee\x15\x58\x8e\x44\x2e\x50\xb7\x1c\xd6\xe4\x71\xda\xc9\x9c\x34\x86\x35\x88\xd6\x96\xb3\x7e\xb3\xed\x7a\xf9\x2b\xc7\xa6\xe2\x27\x80\x64\x24\x11\x5e\xea\x61\xd9\xfb\x97\x5c\x51\xd2\x0e\x3c\x03\xa2\xd0\x4f\x51\xc9\x85\xb7\x8c\xd1\x22\xeb\xeb\xd5\x19\x89\x63\x6a\x6d\x38\x7e\xaa\xe2\x90\x51\x2c\x53\x78\x03\x48\x66\x01\x75\x59\x26\xf6\x50\x87\xf5\x77\xda\x12\x9a\x3f\x6b\x85\x2a\xa6\x39\xf4\x70\x91\x66\x70\xd9\x7e\x7c\xd1\x12\xa0\xd2\x69\x07\x27\xea\x93\xf6\x1e\x0b\x30\x94\xb2\xe8\xc6\xef\x8f\xfd\x32\x15\x48\x13\xff\x0e\x1e\xd5\x46\x34\x98\x50\x96\x99\x4a\xe0\x6b\x5c\x83\xee\xd2\x1c\xb0\x84\x99\x33\x3a\xe6\xc8\x7d\x5a\x20\xe0\x9c\xf1\x79\x59\x7c\x24\x42\xce\xe6\x0e\xdc\xb5\x04\x8e\x25\xe3\x86\xf4\x73\xdb\xce\x7c\x51\x31\xca\x5e\x81\x9c\x19\x0b\x72\xe8\x97\xd0\x42\xa8\x87\xa6\xa9\xa2\xe9\x5a\x5c\x1f\xa5\x63\xdc\xc3\x9d\x63\x13\x0d\xde\x0a\xbe\x44\x61\x51\x26\x59\x03\xdd\xe0\x84\x81\x2b\x8b\x9a\x51\x49\x68\x8f\xed\x7f\x76\xa8\x30\x15\x0d\xa3\xe3\x27\xc1\x3d\x63\x6d\x14\xb9\x3d\x78\x18\x3b\x62\xdd\x1a\x44\x6f\x14\x70\xe3\xf7\x09\x1e\x65\xd6\xef\xe6\xcc\x4f\xf0\x23\xca\x01\x0e\xb2\xe7\x54\x9d\x4c\xe1\x47\x22\x73\xd6\x3d\xad\x53\x82\xb3\x1a\x5d\x7a\xe9\xb9\x40\xcd\x3d\xb1\xdf\x73\xf3\x38\xd9\x9e\xcb\xc2\x9c\x85\xde\x85\xae\x7b\x2e\x8b\xc2\xcf\xf5\x73\x54\x2f\x67\x41\xfe\xcf\x17\x65\xa1\x4b\xe0\xdc\xe9\x1d\x55\x73\x2f\xce\x2a\x74\xaa\x0f\x5f\x94\xc5\x8b\x32\x55\xeb\x3c\xab\x51\x14\xa3\x39\xc2\x6d\x3b\x23\x09\x5f\x66\x1c\xa7\xb4\xc6\x6d\xab\x70\x04\x3a\x5f\xa1\x77\x0e\xcf\xf3\x4b\x59\x16\x6b\xc6\x15\x4f\xa1\x39\xb4\x94\x62\x23\x4b\x13\x8d\xb2\x28\xc8\x5a\xbf\xfc\x69\x85\x28\x69\x35\xab\x75\x03\x25\xad\x16\x28\x8b\xe2\xc5\x30\x9a\x63\x56\x0e\xeb\x3d\x07\xfc\xa0\x19\xca\x62\xaf\xc8\xd2\x2c\x54\xa7\x2b\xe4\x3c\xba\x74\x67\x0b\xb0\x3c\xe3\x2b\x1f\x68\xdc\x1a\x57\x08\x77\x1d\xd0\x66\x96\xa2\x2e\x50\xf4\x6a\xb9\x5c\xce\x4b\xad\xd8\x60\x8f\x95\x5b\x28\xf5\x27\xc2\x30\x34\x1b\x0a\x3f\x14\x0d\xf9\x05\x1d\xbe\x32\x6e\x1d\x03\xa2\x9e\x56\xa8\x5e\x36\x6c\xb6\x95\xb2\x5b\xde\x80\xdc\xb2\xe6\x96\x09\xb9\x40\xf5\x52\x65\xc8\x69\x75\xa6\x55\xa9\x16\xa8\xb2\x3f\x0c\x65\x81\xb4\x88\xe9\xc7\x46\x8b\x66\x81\xde\x0d\x8a\x2c\x4c\x6e\x6a\x0b\xe6\xd6\xb0\x09\x53\xb2\xdd\x30\x9d\xf1\x6e\x3b\x79\x0e\xd1\xce\x51\x3d\x95\xc0\x13\x1d\xd6\x39\xb4\x5e\xaa\x64\xaf\x97\x46\xc1\xf9\x04\xae\x6a\xcc\xea\xad\x53\xc2\x6f\x0c\xc4\x15\x44\x71\x38\xab\x4e\x0d\x76\x14\x8f\x04\x87\x13\xa0\xdf\x3f\x2c\x4c\x99\xbc\x3e\x2c\xc3\x18\x89\xd3\x4b\xab\xaf\xb4\x1f\x0a\x6e\xa9\xf7\xcc\xd5\x0a\x55\x95\xae\xb9\xc1\x7b\xbf\x70\xae\x08\x9f\xe1\x5f\x3d\xe1\xd0\xa8\x4c\x2f\xb6\x80\x1b\xe0\xba\x11\x68\x25\x7f\xd3\xcf\xcf\x23\x65\xf9\x05\xe4\xac\xba\x5e\xbf\xbf\xc1\xb2\xde\x56\x8b\xf1\x80\xb9\x13\x16\xdf\x5d\x46\xd1\x8c\x3f\x96\xd7\x97\x53\x2e\xd3\x2c\x8e\xcf\x3e\xb1\x0b\x46\xa5\x6e\xc8\xda\x75\xfa\x9f\x41\xbf\xa9\x24\xb0\x03\xf6\xff\x5d\x97\x67\xd5\xe9\x70\xc4\x84\x81\x2e\xd7\xff\xba\x70\x13\x2b\x42\x58\x00\xdd\x03\x17\x28\xb7\x2e\xfc\x57\x85\x70\x5a\x9d\x75\x0f\xe6\x0b\x5a\x35\x29\xe7\xf7\xeb\xea\x42\x69\x98\xb3\x9a\xb8\x56\xbb\x7d\x67\x8e\xec\xb2\x60\x26\x4e\xd4\x48\x1c\xd3\xc8\x1a\x91\xa5\x5e\x62\xc6\xe2\x30\x6d\x3f\x5f\x0d\x5a\xc6\xdb\x86\x7e\xda\x97\x97\x57\x29\xff\x78\x7f\x23\xde\x5f\x38\x8c\xd5\x22\x90\x1c\x46\x8c\x71\x30\x49\x39\x98\x64\x3b\x3e\x89\x3b\xbe\xdf\x50\x84\x53\x18\x89\x41\xed\x1a\x1b\xd8\xb3\xb2\x82\xcb\xab\xb4\x1d\x0a\xd0\xb8\x6d\x15\xfa\x42\xb7\x9a\xd2\x09\xd7\x7f\x02\x00\x00\xff\xff\x75\x8b\xc6\x9a\x78\x23\x00\x00")

func collectionGoBytes() ([]byte, error) {
	return bindataRead(
		_collectionGo,
		"collection.go",
	)
}

func collectionGo() (*asset, error) {
	bytes, err := collectionGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "collection.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cosmosdbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x51\x6f\xd3\x48\x10\x7e\xb6\x7f\xc5\x60\xa9\x95\xdd\xba\x4e\xda\xa3\xe8\x14\xce\x0f\xd0\xa6\x50\xa0\xa1\x47\xc2\x13\x20\xb1\xb1\xc7\xc9\x52\x7b\xd7\xec\xae\x5b\x42\xd5\xff\x7e\x9a\x5d\x3b\x71\x9b\x82\x90\xae\x52\x15\x7b\x76\x77\xe6\x9b\xef\x9b\x99\x75\xcd\xb2\x2b\xb6\x40\xc8\xa4\xae\xa4\xce\xe7\xbe\xcf\xab\x5a\x2a\x03\xa1\xef\x05\xf3\x95\x41\x1d\xf8\x5e\x90\xa9\x55\x6d\xe4\x60\x59\xb1\xac\xf7\xaa\x97\xec\xe8\xf8\x19\x19\x50\x64\x32\xe7\x62\x31\x98\x33\x8d\xcf\x9e\x92\xa9\xa8\x0c\xfd\x70\x39\xe0\xb2\x31\xbc\xa4\x17\x81\x66\xb0\x34\xa6\xee\x9e\x0d\xfe\x30\xb5\x92\x46\x76\x86\x46\xd9\x7d\xda\x28\x2e\x16\x36\xb2\xe1\x15\x06\xbe\xef\x05\x0b\x6e\x96\xcd\x3c\xc9\x64\x35\x68\x16\x52\x7d\xe3\x83\x85\x1c\x64\x32\xc7\x2c\xf0\x23\xdf\x1f\x0c\xe0\x7d\x6d\xb8\x14\x1a\x14\xd6\x0a\x35\x0a\xa3\xe1\xc5\xe5\x39\x48\x67\xf6\xcd\xaa\xc6\xf5\x1e\x6d\x54\x93\x19\xb8\xf5\xbd\x89\x1c\xcf\xd8\x02\xdc\xdf\x5c\xca\xd2\xf7\x2e\x15\xce\x14\x5f\x2c\x50\x69\x80\x4f\x5f\x1c\x1a\xdf\xbb\x94\xda\xac\xed\x6b\xf3\x9d\x8d\x3d\x56\x4a\xaa\x7e\x64\x26\x00\xc9\xe6\xc2\xba\xe5\x4d\xd0\xa9\x61\xa6\xd1\x27\x32\x47\xe0\xc2\xf8\x9e\x7d\x72\x7f\xce\x2d\x7c\xfd\xa6\xa5\x18\x05\x94\x60\xf0\xd5\xf7\x2e\x50\x6b\x92\x69\x6b\x43\xe5\x16\x82\xaf\x04\xa4\x68\x44\x06\x21\xc2\x9e\x8d\x17\xb9\xb0\x61\xd4\x1d\xb9\xf5\x3d\x85\xa6\x51\x02\x8a\xca\x24\xd3\x5a\x71\x61\x8a\x30\xd8\xc9\x61\x47\x8f\x60\x47\x07\x31\x60\xb2\x81\x46\x6f\xdd\x6f\x1b\x3f\x6a\xd3\x3d\xd7\xd6\x75\x2f\x0d\xe7\x58\x83\x51\x0d\x02\x2f\x28\x79\xe0\x1a\x64\x01\x3d\x02\x98\xc8\x81\x1b\x0d\x9b\x73\xe4\xac\x62\x26\x5b\x22\x69\xb2\xb6\xda\x44\xb6\x82\x84\xe4\xd4\xb2\x1a\xf7\x36\x13\x83\x91\x55\x8e\x12\x74\xa1\x63\x90\x57\x30\x4a\xe9\x31\x09\x5b\x36\x9e\x93\xed\xd6\xf7\x3a\x0e\x68\xad\x97\x40\x9a\xf6\x01\x78\x77\x1b\xae\x58\xa9\x71\x23\x33\x55\xcb\x07\xfc\xde\x70\x85\x39\x65\x68\x96\xe8\x30\xb5\x14\x90\xb5\xb0\x56\x5b\x57\x05\xc7\xd2\xee\x13\xd2\x40\x2d\xeb\xa6\x64\x06\x41\x0a\x60\xe4\xef\xf2\xe3\x0c\xa4\x82\xd3\xf1\xbb\xf1\x6c\x0c\xb2\x46\xc5\xa8\x3e\xfd\x6b\xa6\xb6\x62\xa5\x56\x35\x9b\x4b\x11\x06\xd6\x39\xa7\x62\x77\xcb\x81\xeb\x81\x0f\x68\xd4\xea\xbd\xb8\x54\x98\x49\x91\x73\x72\x76\xc6\x78\x89\x39\xa1\x53\x1c\x35\x30\x20\x72\x69\x81\x70\x72\x03\x05\xe3\xa5\x86\xbc\x41\x30\xd2\x62\xda\x3a\xeb\xe4\xf8\xa5\xeb\xb0\xb0\x2e\xc3\xc8\xf1\x10\xc1\x46\xa7\x88\x08\x2f\xa4\x02\x4e\x6a\x0c\x9f\x03\x87\x7f\xe0\xf8\x39\xf0\xfd\x7d\x2b\x05\x6d\x4c\xa1\x08\x23\xdf\x23\xe5\x9e\x3c\x2a\x79\x0c\x34\x33\x5a\xad\xb6\xc3\xdb\x18\x9d\xaa\xbe\x47\xca\x79\x34\x35\x92\x69\x89\x58\x87\xf6\xf1\xb4\x71\xc4\x86\x87\xc3\xe1\x1e\x8f\x60\x0f\xac\xf9\x82\x97\x25\xd7\xd6\x61\xd4\x93\xbc\x15\xfb\xcd\xf4\xfd\xe4\x35\x13\x79\x89\x80\x3f\x6a\xa9\xb1\x15\x9b\x66\x1d\x0e\x72\xa4\x9f\x6e\xba\x40\xa3\x31\x87\xf9\x8a\xce\xfd\x7a\x52\x59\x5d\x7b\x6e\x53\xd8\xb5\xf6\xe4\x8d\x96\xc2\xd9\x6e\x7d\xef\x25\xd3\x3c\x73\x6f\x23\x70\xeb\x3d\x13\x25\x7b\x6a\x63\xb7\xb3\xac\xdb\x73\xcf\x68\x29\xb1\x5c\x9e\x17\x13\x79\x46\x45\x38\xb2\xbd\x19\x13\x43\xb1\x4f\xff\xeb\x81\x91\xc1\x5e\xce\x0c\xa3\xd9\x7d\x52\x72\xa4\x76\x62\x8d\x59\x4a\xc5\x7f\x22\x95\x1f\x6a\x13\x2a\xfc\x0e\x7b\x56\x87\xd6\x12\x83\x42\x2d\x1b\x95\xe1\x6c\x55\xe3\xe6\xed\x1d\x17\x57\xed\xc0\xb1\xca\xe4\x54\xef\xa3\xd4\x11\x3e\x91\x37\x61\x94\x7c\x9c\x9d\x84\x51\x72\x26\x55\xc5\x4c\x18\x5c\x48\x11\xc3\xf0\x08\xde\x30\x01\x47\xc3\xe1\x33\x38\x3c\x1e\x0d\x9f\x8e\x86\xc7\xf0\xea\x62\x46\x65\xed\x2d\xe9\x3c\xdd\x3d\xc9\x04\x6f\x42\x77\xeb\xd0\x63\x0c\x59\x52\x31\x6d\x50\xbd\xc5\x55\xe4\x7b\xd4\x1f\x67\xed\x54\x5b\xc6\x10\xec\xe8\xcf\xa2\xff\xff\x59\x04\x71\x0b\x4d\x27\x33\xf9\x4e\xde\xa0\xa2\xc4\x92\x0b\x34\x4b\x99\x47\xbf\x4b\x69\xfb\x20\x25\x16\x11\x3c\xf2\xf0\x1a\x59\x8e\x2a\x99\xa2\x09\x83\x17\x2d\x77\xb6\xe2\x82\x18\x1a\x55\x26\xff\x36\xa8\x56\x63\x9d\xb1\x1a\xc3\x7b\xc3\x97\xa6\x63\xea\x92\xd8\xbd\x46\x95\x1e\x26\xc3\x5d\xcd\x17\xa9\x9d\xc6\xee\x36\x4d\xa6\x26\x1f\xb7\x17\x6c\x62\x1f\x70\x26\xa7\x16\x4d\xb8\x4c\xa6\x4d\x15\x0a\x5e\x46\xf4\xb7\x8d\xe5\xc7\x41\xa5\x0f\x08\x69\x10\x83\x05\xfc\x5b\xd5\x73\x19\x56\x96\x8a\x18\x6a\x66\x96\x7f\x20\x71\x4c\xad\x81\x99\xc1\xfc\xfe\x95\x16\x03\x17\x31\xc8\xc6\xd0\x0b\xaa\x82\x65\x78\x7b\x17\xc3\xd2\x42\xd3\xae\xa1\x1d\xce\x76\x6a\xb8\xcb\xe9\x7b\x6c\x2f\x0e\x92\x9b\x76\x4c\xf0\xa6\xab\xbf\x0e\x57\x40\x0b\x7a\x34\x18\x04\xfb\x59\xd2\xe1\x7f\x91\x65\xb2\x11\x66\x3f\x48\x72\x99\x35\x15\x5d\xc0\x09\xfb\xd9\x28\xb4\x4d\x18\xec\xbb\x64\x88\xa5\xee\x82\x80\x27\x29\xbd\x3f\xb8\x0f\x68\x06\xd8\x1d\x5c\xf4\x37\xcc\x9b\x82\x20\xed\xda\xcf\xa1\xe4\x65\x53\x14\xa8\x6e\xef\xda\xf1\x35\x4a\xdb\xfe\x9b\xe0\x8d\x13\x47\x85\xf3\xa6\x88\x7b\x7d\x1e\xb5\xaa\x85\x5c\xb4\x83\xee\x01\x82\x7b\x10\xec\x00\x23\x1d\x5f\xca\x7c\x05\x29\xb8\xcf\xa7\x64\x22\xeb\x93\x52\x6a\xe7\x3d\x6a\xb7\xf4\xa5\x3e\x91\xc2\xa0\x30\x07\xa4\x55\x10\x43\xc0\xea\xba\xe4\x99\x2d\xc2\x01\x7d\x2b\x04\x91\x4b\x8f\xc6\xf1\x55\x0c\xd7\x84\x5c\x31\xb1\xc0\xb5\x2a\xb7\xf7\xbc\x7e\x5a\x7f\x9d\x25\x27\x4c\x48\xc1\x33\x56\x5e\x9c\x5f\x8c\xdd\xea\x5b\x5c\x85\x57\xd1\x17\x48\xe1\xda\xb9\x7d\xb4\xf2\xae\x51\x69\xd7\x04\xc1\xd1\xf0\xf0\xef\x83\xc3\xa3\x83\xbf\x0e\x6d\x4f\x67\xc9\x63\x23\xe6\x77\x15\xe7\x5a\x4d\xd7\xeb\x12\xc9\x92\x65\x96\x9c\x4a\x3a\xf7\x07\xba\x7a\x39\x16\x48\x97\xb4\xae\x2d\xb3\x89\x65\x33\x8c\x9c\xe0\x1d\x05\xbd\xe3\x96\xa7\xc7\x49\xf2\x72\x2c\xd1\x60\xd8\xda\x62\xb8\x8a\x5a\xdd\xb6\xc9\xb5\x01\x1d\x31\xee\x6c\x7b\xe8\xd3\x55\x4b\x1e\x9d\x23\x02\xf3\x7b\xa5\xe4\xa6\x39\x8d\xa7\x16\xef\xbd\x82\x72\xa0\xed\x5a\xaf\xef\x9e\xa4\x8f\x75\x23\x05\xa5\x7b\x87\xd8\x71\x9f\x42\xae\x06\x7b\xc0\x92\x57\x5b\x05\x14\xd1\x07\xd1\x76\x0d\xb5\xe9\xb7\x97\x4d\xb8\x8b\x4a\x75\xa9\x3f\xfc\x9e\x7a\x08\xef\xf1\x4e\xa3\x11\xd1\x92\xbe\xbb\xfb\x3f\x30\xb5\xae\x37\xc8\x64\x63\xa2\xae\x32\xed\x92\xe0\xa5\x7f\xe7\xff\x17\x00\x00\xff\xff\xfe\xa6\xac\x42\xf0\x0c\x00\x00")

func cosmosdbGoBytes() ([]byte, error) {
	return bindataRead(
		_cosmosdbGo,
		"cosmosdb.go",
	)
}

func cosmosdbGo() (*asset, error) {
	bytes, err := cosmosdbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cosmosdb.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _databaseGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x96\xdf\x6f\xdb\x36\x10\xc7\x9f\xc5\xbf\xe2\xaa\x87\x40\x4a\x15\xf9\x65\xd8\x83\x01\x3d\x14\x76\x90\x05\x5d\xb2\xa1\xee\x80\x01\x45\xd1\x52\xd4\xd9\xe6\x2a\x93\x1e\x49\x2f\x0b\x8c\xfc\xef\x05\x49\xfd\x20\x65\xbb\x45\xfc\xe0\x44\xba\xe3\xdd\x97\x1f\x7e\x75\xf2\x9e\xb2\x6f\x74\x83\xc0\xa4\xde\x49\xdd\xd4\x84\xf0\xdd\x5e\x2a\x03\x19\x49\x52\x14\x4c\x36\x5c\x6c\x66\x35\xd5\xf8\xeb\x2f\x29\x49\x52\x81\x66\xb6\x35\x66\x9f\x92\x9c\x90\xd9\x0c\x96\xd4\x50\x1b\x05\x85\x7b\x85\x1a\x85\xd1\x40\xa1\xe9\xee\x12\xf3\xbc\xc7\x31\x47\x1b\x75\x60\x06\x8e\x24\xb9\x5f\xc2\xf0\xd1\x46\x71\xb1\x81\xaf\xff\x68\x29\xe6\x29\x6f\x0a\xb9\xe3\x06\x77\x7b\xf3\x9c\x7e\x25\xc9\x07\xd4\xf2\xa0\x18\xda\x15\x71\xe6\x17\x35\xcd\xfd\xc8\x77\xa8\x0d\xdd\xed\x01\x80\x0b\x63\x8b\xf7\xb9\x46\xc7\xa9\x2b\x6c\xd7\xe7\x05\x7c\xd1\xd8\xae\xe3\xe4\xdb\x8f\x74\x73\x21\x19\x0d\xdd\xc4\xc9\x0b\xd9\xb6\xc8\x0c\x97\x42\x4f\x93\x99\x6c\xdb\x89\x8e\xbf\x34\x2a\x7d\xbe\xf4\xc1\x86\xa2\xec\x97\x08\xb9\x0e\x99\xf7\xc4\x75\x8c\x5c\x07\xcc\x17\xf2\xe0\x99\x0c\x70\x20\x24\xc4\x6c\xf8\x22\xfb\x4e\x5b\xb4\xe2\x84\xff\xd8\x15\x3e\x7d\xbe\x1e\x8e\xbd\xcb\x1f\xa2\xd3\x3d\x39\xc5\xfd\x06\x16\x2d\x47\x61\x02\xd9\x5b\x06\xd1\xe7\xda\xda\xaf\xf4\x69\x24\xe9\x97\xbd\x63\x4e\x7f\xa7\x93\x24\x3b\xaa\x0d\xaa\xf7\xf8\xdc\xad\xfa\xf4\xb9\x7e\x36\x38\x21\xd8\xf5\xe2\xa1\x65\x81\xf9\xca\x11\xc6\x3e\x51\x18\x54\x6b\xca\xd0\xe1\x54\x48\x0d\x66\xc3\x36\x73\x18\xff\x2f\x00\x95\x92\x2a\x27\xc9\xef\x5c\x9b\x2c\x1f\x0a\xdd\x1b\x54\xd4\x48\xe5\x03\xef\xda\x36\x0b\x97\xe9\x71\xdd\x1d\x9a\xcc\xef\xe5\x7c\xdd\x25\xb6\x18\x77\x77\x91\x13\x9c\xb6\x4d\xdf\x34\x80\x7a\x1d\xe3\x26\x09\x93\xc2\x70\x71\xa0\xd6\xb7\x03\xc4\x46\x0a\x1c\xb8\xd7\x52\xb6\x13\x7e\x43\xe1\x98\x20\xef\x37\x19\x31\x1c\x93\x43\x8a\x8f\xf8\xbf\xb9\xc0\xc0\xf7\x7a\xc4\xa7\xc9\x29\x28\x34\x07\x25\x6c\x47\x81\x4f\x27\xe7\xb6\x3e\x08\x76\xba\x28\xdb\xb2\xc8\x38\x05\x4c\x8c\x53\xc0\xe8\x98\x81\x7b\x5c\xa3\x17\x66\x65\xff\x47\x95\xbd\xea\xa0\x93\x84\xc1\xbc\x82\xab\x18\xea\x91\x24\xc9\x96\xcd\x63\xf7\x6e\x59\x41\x92\xa9\x6b\xe7\x27\x6a\x48\xf2\x62\xab\x96\x83\x28\xd7\x1c\x2a\xf0\x93\xb8\x5c\x99\xe6\xb6\x1b\xce\xe5\x12\x99\x6c\x70\xe5\x44\x67\xc3\x82\x9c\x24\x7c\xed\x16\xbd\xa9\x40\xf0\xd6\xaa\x4e\x3c\x3a\x7b\xe9\xea\xf9\x2e\xdd\x4d\x56\xd8\xfb\x96\xba\x43\x98\x31\x98\x98\x24\x07\xda\xb6\x19\x3f\x39\xd0\xb3\xa7\x67\xdb\xd1\xb6\x6d\x6a\xed\xc8\x0c\xf1\xa3\xed\xb8\x96\xca\xc9\x69\x6a\x9f\x6f\x53\x78\xe9\xad\x40\x92\x33\xba\x4f\x85\x27\x2f\x3e\xd1\x36\xa8\x82\xc4\x5a\x21\xfd\xe6\xc2\x24\xe9\x04\x94\x7e\xf0\xbd\xad\x60\xb8\x18\x63\xc1\x88\xf3\xf1\xf1\xc6\x98\x34\xce\xb5\x0a\xe8\x7e\x8f\xa2\xc9\xa6\x91\x02\xa2\xcb\xb2\x2c\xf3\x88\xae\xcf\xff\x39\xe2\x6e\xaa\x08\x7c\x6a\x6a\x08\x67\x4b\x78\x59\x8c\xde\x73\xa0\xbd\x35\x58\xd9\xc8\xcc\x79\xfc\x01\xcd\x56\x36\x7f\x4a\x6d\x0a\x48\x9b\x5a\xa7\xe3\x9f\xb4\x00\x97\xb2\x32\xd4\x1c\xb4\xef\xd6\x14\x70\xe5\x1a\x16\x70\x65\xbf\x04\x6f\xf3\x5e\xf8\x0f\xc5\x5e\x18\x6e\x56\x52\xb7\xed\xab\x73\x73\xe8\x18\xd7\x99\x03\x7b\xf9\x69\x9b\x8b\xa3\x32\x68\xc6\x4a\x6b\x50\x56\x7a\x59\xf9\x0f\x6b\xda\xf9\xda\xd4\xbc\x19\x1f\xf6\xd7\x03\xbe\xc3\x8e\xef\x2c\x7d\x6b\x6b\x45\xb0\x87\x7b\x01\xee\x3f\xde\x17\xde\xc2\xaf\xc3\xdc\xcd\xfa\xd8\x10\x4e\x9c\xd5\xe6\x1e\x82\xd2\xfd\x44\xa9\x2a\x48\xd3\xf0\x41\xbf\x55\xca\x06\x3e\xe0\xbf\x07\xae\xb0\xb1\x8e\x4c\xb6\x48\x1b\xfb\x9b\x63\x5e\x79\x69\xbf\xb9\xeb\xe3\x18\x29\x57\x68\xb2\xf4\x7e\x7d\xf3\x40\x0d\xdb\xa6\x45\x5f\x3e\x0f\x40\xc7\x20\xbc\xc0\x60\xdf\xe5\xfd\xf2\x14\x86\xbb\x19\xd0\x78\x94\x0b\x29\x8c\x1b\xac\x0e\x8a\xfb\xea\x34\x04\x87\xc7\x47\x20\xa1\x89\x72\xe8\x5f\x1d\x76\x04\x4c\x7c\x11\x1c\x1d\x5f\x03\x2f\xdd\x8b\x6c\xe4\xe2\x9f\xcc\xcb\x20\xdc\x9a\xe8\x8d\xf8\x66\x20\x1b\x41\xfa\xfb\xe6\x41\xdf\x2c\x82\xc4\xb4\x98\xac\xec\xa6\x80\x37\x10\xbf\x64\xa0\x8b\x0f\x68\xe8\x18\x1d\xd0\xb9\x38\xdb\x7d\xbb\x89\xfa\xaa\x5f\x58\xde\x9d\x57\x6d\x0b\x7a\x48\xd5\x74\xe7\xce\x53\x24\xf0\xe9\xf7\x00\x00\x00\xff\xff\x2c\x98\x5c\xc0\x32\x0c\x00\x00")

func databaseGoBytes() ([]byte, error) {
	return bindataRead(
		_databaseGo,
		"database.go",
	)
}

func databaseGo() (*asset, error) {
	bytes, err := databaseGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "database.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _documentGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xcd\xaa\xc2\x40\x0c\x85\xd7\x9d\xa7\x08\x5d\x5f\xe8\xfe\x3e\x84\xe8\xc6\x8d\x08\x8d\x35\x94\xaa\x99\x19\x93\x54\x28\xe2\xbb\x4b\x7f\x9c\x32\x9d\xd5\x24\xe7\x7c\xe4\x8b\xd8\xdc\xb1\x25\x68\x82\x72\xd0\xeb\xc5\xb9\xaa\x82\x43\x4f\x32\x80\x50\x14\x52\xf2\xa6\x80\xf0\x1c\x57\xce\x86\x48\x4b\xaa\x26\x7d\x63\xf0\x76\xc5\x3c\x4f\x4f\x4d\x3a\xdf\xce\xff\xfa\xa6\xc1\xff\x97\x13\xf8\x17\xb8\x33\xe2\x68\x43\x59\xbb\x62\x8f\x82\x4c\x46\xa2\x70\x3a\xa7\xe1\x07\xc4\x94\x66\xd4\x67\x32\x5b\xdb\x99\x5d\x62\x66\xc3\xb5\xb5\x5a\xee\x90\x29\x09\x2e\xa7\x3c\x32\xe5\x6a\x47\x7c\xf4\xb4\x69\xbd\xc6\xdd\xc6\xe5\x1b\x00\x00\xff\xff\xa1\x09\x70\x18\x37\x01\x00\x00")

func documentGoBytes() ([]byte, error) {
	return bindataRead(
		_documentGo,
		"document.go",
	)
}

func documentGo() (*asset, error) {
	bytes, err := documentGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "document.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x5b\x6f\xdb\x36\x14\x7e\x16\x7f\x05\xcb\x87\x40\x8a\x25\x79\x7b\x0d\xe0\x01\x43\x52\x74\xde\x96\xb4\x6b\xf3\x30\x60\x18\x10\x9a\x3a\x76\xd8\xc8\xa2\x4a\x52\x68\x03\xc3\xff\x7d\x20\xa9\x0b\x75\x73\x92\xad\x18\x8a\xfa\x21\x8e\xc9\xc3\x73\xfb\xbe\x73\x78\x58\x52\xf6\x40\x77\x80\x99\x50\x7b\xa1\xb2\x0d\x42\x7c\x5f\x0a\xa9\x71\x88\x02\x52\x80\x5e\xde\x6b\x5d\x12\x14\x10\xa5\x25\x2f\x76\x8a\x20\x14\x94\x0f\x3b\x4c\x76\x5c\xdf\x57\x9b\x94\x89\xfd\xf2\x23\xdf\x27\x7b\x5e\x68\x90\xcb\x9d\x48\x1a\x4d\xcb\xf2\x61\xb7\xdc\x41\xd1\xfe\x6e\xff\xc9\xaa\xfd\xfe\x91\xa0\x08\x21\xfd\x58\x02\xd6\xb0\x2f\x73\xaa\xe1\x32\xe7\x50\x68\xac\xb4\xac\x98\xc6\x07\x14\x9c\x67\x54\xd3\x0d\x55\xf5\x0e\x0a\x4a\xaa\xef\xb1\x73\x04\x1d\x11\x5a\x2e\xf1\x6d\xff\x2c\x57\x98\xb6\xfa\x30\x73\xc7\xac\x91\xa1\xa0\xf1\x76\x4b\x19\x18\x3b\x97\x12\xa8\x86\xd0\x29\x8e\xf1\x79\xf9\xb0\x4b\x1b\xf9\x18\x9f\xbf\x2d\x35\x17\x85\x8a\x70\x38\xd8\x01\x29\x85\x8c\x50\xf0\x3b\x57\x3a\x8c\x5a\x13\x6b\x0d\x92\x6a\x21\xdd\xc6\xcf\x79\x1e\x0e\x8f\xaa\xee\xec\x1b\xd0\xad\x61\xf7\x3d\x6f\xe7\x3d\x94\x39\x65\xff\xc1\xd1\x2b\xc8\xe1\x39\x81\x5a\x79\x14\xfc\x51\x81\x7c\xec\xa4\xed\xcf\xa9\x30\xed\x86\x89\x73\x28\x3a\x17\xf5\x71\x80\xbc\xc9\x53\xa3\xce\xc7\xbf\xcf\x0c\x14\x30\x51\x68\x5e\x54\xd4\xb8\xd9\xf0\x20\xc8\x44\x01\xb8\xf9\x6c\x84\xc8\x47\xea\xad\x37\xcf\xd1\x5f\x52\xa9\xb9\x51\xfe\x00\x8f\xad\xfe\x4f\xe6\x74\xa3\xdf\x45\xf6\x12\x4f\x3c\x92\xb6\x2e\xf4\x69\xca\x9b\x44\xf6\x88\xda\x09\xfb\x54\xbd\x81\x2f\xfa\x04\x9d\x9c\xbd\x1b\xf8\x3c\xa0\xbb\x04\x5d\xc9\xc2\x58\x2d\xe0\xf3\xa8\x40\xb6\x55\xc1\xc6\x87\x42\x26\xf2\x9c\xe1\x4b\x91\xe7\xc0\x4c\x9c\x6e\x39\xc6\x66\x9d\x67\x2d\x5b\x07\xa6\x0e\x28\x70\xd6\xf0\x59\x3f\xbd\x07\x14\x04\xfd\x82\xbe\xb0\xaa\x58\x1a\x9e\xb3\x81\x91\x28\xed\x4b\xc6\x28\xb0\xc5\x7f\x81\xbb\xcf\xfc\x59\xdb\x26\x16\x98\x2c\xcd\x96\x5a\x12\xbc\xa8\x7d\x8e\x51\x70\x34\x39\xb2\x01\x87\x0c\x0f\x08\x10\x61\x9a\xe7\x21\x1f\x41\x30\x9b\x6f\x13\x2c\xcd\xf3\x46\x8b\xc2\x17\x2b\x7c\xd6\x93\x3c\x1c\x11\x0a\xb6\x42\x1a\xc9\x40\xf7\xce\x1b\x61\x9e\x3a\x40\x51\x10\xf0\xad\x5d\x7c\xb5\xc2\x05\xcf\xad\x78\x93\xc7\x82\xe7\xf6\x00\x0a\x82\xa3\x13\xec\x0c\xae\x3c\xf1\x8d\x04\xfa\x60\x85\x50\xd0\x73\x2b\xbd\x14\x55\xa1\xf1\x62\x85\x07\x4b\x43\xb9\xf7\xa0\x44\x25\x19\xac\xaf\xb0\x2f\xdb\x2d\x0f\x0f\xdc\x76\x8e\x60\x5a\x96\x50\x64\xe1\xf4\x7e\x8c\x27\x16\xd3\x34\x8d\x90\x75\xb7\x8e\xd4\x3f\x1b\x9b\xc0\x4e\x82\x55\xb7\xed\x89\xa2\x8d\x0d\xcd\x5b\x96\x0f\xda\x9c\x70\x5d\xce\x6f\x97\x73\xa2\x06\x90\x0e\xe9\x7b\xa0\x19\x48\x0b\xb2\xb9\x14\xd3\x5f\xec\xef\xc3\xb1\xdd\x49\x3f\x80\x0e\xc9\x9f\xc9\xb5\x4a\xae\x04\xab\xf6\x50\xe8\x6c\x93\xbc\xf3\xfc\x23\x31\xbe\xfb\x8b\xdc\x2d\x7c\x9f\x17\x77\xe4\xef\xbb\x08\x21\x03\x6c\xe3\x9b\x07\x6b\xbb\x84\xcf\x6a\x87\x8d\xc5\x23\x6a\x36\xd2\x1b\xf1\xfa\x96\xee\x0c\x60\xb2\x02\x84\x02\xe3\xf4\x0a\xb3\x54\x81\xae\x0f\x84\xb5\x68\x2f\x2d\x31\xae\xbd\x8e\xd0\x04\xf7\x1c\x20\x0e\x9c\x46\x61\x26\x42\x1b\xf7\x35\xe8\x7b\x91\xbd\x13\xca\xf4\x02\x5b\x6c\x0b\xb2\xcc\x04\x53\x24\xc6\xa4\xfe\x76\xeb\xb1\x4b\xd4\x07\x4d\x75\xa5\x1c\x5c\x59\x8c\xcf\x7a\x5e\x9c\x4d\x39\x54\x9b\x3f\x85\xfe\xcc\xa5\x3b\xd5\x7f\xfc\xeb\xe5\xd0\xd7\x73\x81\xd9\xe9\x8e\xf0\xe4\x15\xee\x19\x64\xa9\xe9\x1f\x2c\x75\xae\x45\x27\xf5\x9a\x7b\xdf\x67\x41\x57\x20\x5e\x6b\xfd\x26\x88\x39\x83\xff\x1b\x18\xc2\xbf\x24\x8b\x2e\x86\x21\x15\xa6\x65\x3c\x7a\xbc\xfd\x2d\x76\x9d\xee\xdf\x12\xa2\x99\x8e\xbe\x9b\x7e\x70\xaa\x90\xbf\x5a\x15\x57\x13\x28\x7a\xc9\x4a\xd7\x57\xf3\x48\x0e\xe5\x06\x68\x7e\x9d\x3a\xaf\x67\xd6\x49\x54\x5f\x00\xe9\xf7\x07\x9d\x4b\xcc\x7c\x7d\x9d\x84\x6e\x0e\xb7\x1b\x71\x29\x0a\x6d\xc7\x3c\x5b\x8c\xf6\xcf\x8b\xf0\x72\x8f\x86\x49\xb8\xdc\x24\x3d\xf7\x8e\x98\xea\xdc\xbd\xc9\x7d\xdc\xba\x63\xec\xdb\xb9\xc0\xfd\x86\x6a\xcd\x5d\xb8\xaf\xd3\x4d\xbe\x7d\xc0\x3c\xc3\xed\xe7\x5f\x03\xe3\x4c\xd4\xba\x9e\xb8\x1a\xc6\xa4\x69\x89\x3c\x4f\xf9\x86\xd1\x1e\x9d\xeb\x77\x9c\xf1\x6c\x7a\xb4\xe8\xe6\x4b\xc7\x33\xbe\xc5\xaf\x06\x53\xc5\xa1\x3f\x70\xa6\x6e\xd4\x58\x61\x42\x7a\x23\xea\x6b\x29\xcd\xce\x7b\xf8\x54\x71\x09\x59\x3d\xa9\xf6\x6a\x69\xbd\x4d\xae\xa9\x66\xf7\x24\xee\x6b\xb3\x13\xa0\xb1\x91\x43\xd1\xc4\x9b\xbe\x93\x70\x2b\xf9\x6e\x67\x58\x87\x7f\xc2\x3f\x58\x63\xa7\x4b\x53\x42\x52\x1f\x49\xd6\x05\xcb\xab\x0c\x48\xf3\xa2\x56\xe9\xaf\x82\x4f\x2a\x8f\x31\x89\x49\x34\xed\x82\x50\xfa\xa5\x3e\x08\xa5\x9f\xed\x84\xa7\xde\xf3\x02\xf9\xa0\xb4\x24\xe1\x1d\x49\xfc\x59\x26\xc2\xcd\x73\xb0\x7b\x10\x4c\xb0\xd3\x63\x28\xdf\x62\x9e\xda\x67\xea\xb0\xc7\xbc\xa4\x23\x5e\xd3\x2f\xc9\x5a\xc3\x3e\xb1\x8f\x08\x33\xf5\x25\x3f\x92\xa8\xd6\xde\x7b\x19\xbf\x6a\x99\x32\xd6\x72\xe9\x09\x92\x78\x70\x32\xf2\x3b\x1f\x9f\x1a\x3d\xf8\xcc\xe4\xc9\xc7\x93\xe7\x78\xb4\x50\xcf\x6f\xbe\x83\x88\x56\xcd\xc1\xf4\xcd\x74\x24\x46\xa1\x4b\xf1\x6a\x98\x0d\x5b\x37\x68\xdc\x45\x3d\x78\x7b\x0d\xef\x5b\xc3\xf7\x24\xf9\xd7\xca\xf6\x36\x23\x7d\x2b\x2b\x18\xc9\xd7\xf7\x4a\x72\xfb\x58\x9a\xa2\x20\xb4\x2c\x73\xce\x6c\x62\x96\xf6\xe4\xe2\xa3\xaa\xd3\xb7\xb5\x20\x7a\x9d\xf8\x14\x8d\x9e\xb8\x9e\xfb\x9a\x9a\x91\xf6\x88\x21\x57\xf0\xb4\x46\x0b\x47\xf2\xba\xa0\x9b\x1c\x98\x14\x4a\xb5\xca\xfc\x38\x8f\xff\x1f\xf5\xdd\xab\xeb\x85\xdc\x3f\xe3\xa9\xcd\xf0\xb7\x57\x00\xff\x04\x00\x00\xff\xff\x61\xf6\x0c\xd4\x7e\x16\x00\x00")

func templateGoBytes() ([]byte, error) {
	return bindataRead(
		_templateGo,
		"template.go",
	)
}

func templateGo() (*asset, error) {
	bytes, err := templateGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _triggerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xc1\x6e\xe3\x36\x10\x3d\x8b\x5f\xc1\xd5\x61\x21\xc5\x8a\x7c\x0f\xa0\x43\xea\x2c\xd2\xa0\x4d\x76\x91\xe4\x50\xa0\x28\x76\x19\x6a\xec\xb0\x4b\x93\x2a\x49\x23\x0d\x8c\xfc\x7b\x41\x52\x94\x48\x59\x76\xd3\x16\x68\x0e\x81\x3c\x9c\xc7\x99\x79\xf3\x66\xa4\x8e\xd0\xef\x64\x03\x98\x4a\xbd\x95\xba\x7d\x42\x88\x6d\x3b\xa9\x0c\x2e\x50\x96\x0b\x30\xcb\x67\x63\xba\x1c\x95\x08\x2d\x97\xf8\x51\xb1\xcd\x06\x14\x56\xd0\x29\xd0\x20\x8c\xc6\x04\x1b\x6f\x44\xe6\xb5\x83\xc1\x43\x1b\xb5\xa3\x06\xef\x51\x76\x73\x85\xd3\x3f\x6d\x14\x13\x9b\xc8\xf0\xed\x77\x2d\xc5\x45\xce\xda\x4a\x6e\x99\x81\x6d\x67\x5e\xf3\x6f\x28\xbb\x07\x2d\x77\x8a\xc2\x70\xc1\x31\xe0\x57\x35\x85\x3e\xb2\x2d\x68\x43\xb6\x5d\xf0\x64\xc2\xa4\x49\x04\xa8\xd1\x29\xf2\x01\xf8\xfa\x5d\xd9\x7e\xd5\xc0\xd7\x29\xf6\xd3\x23\xd9\xbc\x0f\x0b\x86\x6c\x52\xec\x0f\xb2\x7d\x7d\x17\xf6\x49\xb6\xaf\x93\x62\x3d\xe5\x9f\x3b\x50\xc4\x30\x29\xf0\x81\xa1\x87\x9a\x89\x7d\xf6\x9a\x47\xdb\x45\xf7\x77\x60\x48\xaf\xb1\xf6\xe4\x86\xb7\x58\x22\x63\xf0\x39\xad\x60\x19\x8e\x13\xd5\x8c\x20\x5f\xfd\xfc\x85\x54\x0a\x6d\x88\x30\x1a\xb9\x27\x2b\xd4\xa9\xcf\x25\xe7\x71\x09\x23\xb6\xc1\xf9\x25\xe7\xf9\x21\x62\xa5\x80\x18\x98\x47\xf8\xb3\x19\xd0\x3d\x74\x9c\xd0\x99\xf4\x1b\x9c\xf7\x67\x33\xa8\x2b\xe0\x70\x2c\x94\x3f\x9b\x8c\x9b\xeb\xc0\x2c\x8d\x96\xbc\x84\x41\xe7\x7a\x48\x9e\x33\x1f\xe7\xcd\x1e\x7f\x51\x90\xb6\xbc\xc1\xf9\x17\x15\xe5\xef\x9c\xa4\x36\x07\x4e\x52\x9b\x49\xc2\x3a\xce\xb6\xcf\x55\x27\x79\xea\x68\x41\xac\xe4\x2e\x4c\x67\x34\xa6\x61\x54\xa8\x3d\x3d\xba\x18\xa2\x29\x39\xbe\x0c\x42\x48\x8c\x7f\xfd\xed\x2c\x2c\xa8\xde\x3d\x1c\x4e\x95\xec\x92\xed\x53\x5f\x71\x06\xc2\x44\x19\x9f\xb5\xc4\x90\x27\xa2\xc1\x9f\xa0\xac\x23\xe6\x39\xd0\x9e\x8c\x41\x0f\x65\x71\xd3\xa8\x07\xc5\x74\x04\x37\x61\x40\xad\xad\xa2\x2c\x2d\x4e\x75\x45\x48\xb8\xc4\xc3\x63\x85\x41\x29\xa9\x4a\x94\xfd\xcc\xb4\x29\xca\x70\xcb\x8d\xb1\x4a\x92\xca\xdb\x2f\x39\x2f\x22\x90\x1e\x51\xd7\x60\x0a\x9f\xec\xec\xa5\x5e\x83\x51\x60\x77\x60\x69\x77\x8a\x3e\x99\xd1\x84\x39\x9b\x47\xc8\x2a\xe6\x2f\x21\x16\x65\x54\x0a\xc3\xc4\x2e\x19\xfd\xac\x95\x02\x86\xe5\xf7\x24\x25\x4f\x99\x1d\xae\x4d\xb8\x65\x81\x82\x98\xdd\xd1\x35\xe6\xf7\x0e\xfe\x34\xf3\x04\xf9\x38\x77\xf0\x92\x76\x47\x81\xd9\x29\x61\xa3\x09\x78\x99\x76\x73\xbd\x13\xf4\x00\x52\x50\xc9\x39\xc5\x2b\xc9\x39\x50\xb7\x65\x9c\xb9\xc2\xd6\xce\x5a\x1c\x9a\x90\xc6\xd9\xa3\xcc\x87\xc2\x1f\x13\x9e\xf6\x28\xcb\x52\xe1\x5d\xb8\x8b\x68\x5d\x9c\xd1\x49\x88\xb2\x4e\x3d\x2b\x94\x39\x91\x5e\x44\x2f\x94\xe3\x58\x27\xe7\x05\xce\x97\xf6\x48\x2f\x73\xbc\xe8\x33\xae\x50\xf6\x66\xe9\x71\xd5\x16\x14\xa7\x8d\x2c\x31\xe1\xbc\x60\x53\xda\xe7\x38\xb6\x45\x12\xce\xc3\x6e\xc0\x17\x0d\xfe\x18\x7c\xf6\x6f\x08\x65\x6b\xa9\xac\x4f\x66\x62\xa0\x75\x63\xb5\x6f\x1c\xca\x32\xb6\x76\xc6\x0f\x0d\x16\x8c\x3b\xef\x40\x9c\x60\xdc\x01\x50\x96\xbd\x79\xc7\x21\x52\x13\x79\x3f\x29\x20\xdf\x9d\x0f\xca\xe2\x74\x6a\xbf\x92\x16\x0d\x4e\x2d\x13\xaf\x68\x0f\x45\x9e\xa3\x75\xe2\x3e\xec\xa1\x06\x93\xae\x03\xd1\x16\x73\xa7\x15\x3e\x30\xd5\x75\x5d\x22\x97\x64\x5f\x5e\x84\xab\x6c\x35\xa7\x5a\xd2\xaf\x11\x01\x2f\x41\xb1\xd1\xfc\x4e\x4d\x9e\xe5\xb1\x45\xf6\x57\x83\x69\xdd\xca\xc2\x7e\x06\xd6\xb7\x60\x9e\x65\x6b\x37\x7e\x85\xa9\x93\xc9\x22\x5f\x86\x54\xf2\x0a\xe7\xd1\xb3\x3f\xaf\xb0\x03\x3e\x18\x62\x76\xda\xe7\xd2\x56\xf8\xe3\x98\x4e\x35\xa8\xdc\x95\x52\x86\x22\x4f\xd5\x34\xbf\xf6\x66\x06\x27\xde\x3f\xfb\xe4\x92\x0b\x4c\x4f\x2a\xf9\xd4\x06\x8d\x02\xd1\xda\x4a\x9e\xd6\x3e\xa3\xf2\xd4\x8d\x76\xeb\xf6\xa6\x68\xf4\xff\x65\x0b\xae\x61\xae\x03\xcb\x7c\x31\x44\x98\x6b\xc6\x51\xd7\xa8\x47\x9f\x7f\xaa\xfc\xf8\xfc\xf3\xb6\xf4\x2f\x8e\x43\x9d\xb9\x6a\x6c\x31\xe3\x20\xd6\xee\x63\xb9\x69\x70\x9e\xbb\x59\xec\xf9\xfc\xa4\x94\x3d\xb8\x87\x3f\x76\x4c\x41\x6b\x55\x9f\x3d\x03\x69\xfb\x1d\xe1\xf2\xfc\xd1\xfd\xde\x8f\x27\xf5\x03\x98\x22\xbf\x59\x9f\xdf\x12\x43\x9f\xf3\x2a\x89\x51\x46\xbd\x4a\x39\xf4\xe9\x9e\xe4\xa6\xbe\xb9\x7a\x37\x8f\xce\x37\x22\xf2\x4e\xae\xa4\x30\x6e\xdd\x3b\x3e\xdd\xbf\x3e\xe3\x93\x42\x09\xef\xd9\xff\x61\x64\x97\xf9\x62\x8c\xf2\xae\x62\x27\xee\xff\x79\xb8\xd9\x50\x7e\x3c\xab\x25\x0e\x6f\xe7\x61\x6f\xa7\x53\x18\x15\xcc\xd6\x98\xd5\xee\x63\x61\xd4\x91\xdf\x96\xc7\x85\xe3\x30\xc9\x57\xc7\x87\x41\x89\x89\xa8\x7e\x39\xbf\xd5\xe7\xab\xc8\x31\xaf\x26\xc8\x7e\x33\x7b\xda\xd9\xdc\x98\xb2\xbf\x59\x94\xec\x70\x51\x1e\x0c\xa1\x8e\xa4\x33\xf3\xde\x8b\xab\x9e\x14\xd6\x04\x60\x7d\x3d\x5f\x90\xbd\xd0\xf3\xd7\x4c\x49\x71\xe3\x89\xa2\xa6\xfd\x15\x00\x00\xff\xff\xc0\xfc\x59\xa2\x2d\x10\x00\x00")

func triggerGoBytes() ([]byte, error) {
	return bindataRead(
		_triggerGo,
		"trigger.go",
	)
}

func triggerGo() (*asset, error) {
	bytes, err := triggerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trigger.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"collection.go": collectionGo,
	"cosmosdb.go":   cosmosdbGo,
	"database.go":   databaseGo,
	"document.go":   documentGo,
	"template.go":   templateGo,
	"trigger.go":    triggerGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"collection.go": &bintree{collectionGo, map[string]*bintree{}},
	"cosmosdb.go":   &bintree{cosmosdbGo, map[string]*bintree{}},
	"database.go":   &bintree{databaseGo, map[string]*bintree{}},
	"document.go":   &bintree{documentGo, map[string]*bintree{}},
	"template.go":   &bintree{templateGo, map[string]*bintree{}},
	"trigger.go":    &bintree{triggerGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
