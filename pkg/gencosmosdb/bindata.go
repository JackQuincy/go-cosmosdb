// Package gencosmosdb Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cosmosdb/collection.go
// cosmosdb/cosmosdb.go
// cosmosdb/database.go
// cosmosdb/document.go
// cosmosdb/template.go
package gencosmosdb

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _collectionGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\xdd\x6e\xdb\xb8\x12\xbe\x96\x9e\x82\xd5\x45\x61\x27\xaa\x7c\x1f\xc0\x17\x45\xd2\xe6\x04\x3d\xe9\x09\xda\x9c\xc5\x02\x41\xd0\x32\xd2\xd8\xe6\x46\x26\xb5\x24\xd5\x26\x08\xf2\xee\x0b\x92\xa2\xc5\x3f\xc5\x4e\x77\x37\x17\x85\xc5\xf9\xe1\xcc\x37\x33\x1f\xc9\x76\xb8\xbe\xc7\x6b\x40\x35\x13\x5b\x26\x9a\xbb\x3c\x27\xdb\x8e\x71\x89\x66\x79\x56\x50\x90\x8b\x8d\x94\x5d\x91\xcf\xf3\x7c\xb1\x40\xa7\xac\x6d\xa1\x96\x84\x51\xc4\xa1\xe3\x20\x80\x4a\x81\x30\xaa\x77\xeb\xb9\x7c\xec\xc0\xd5\x13\x92\xf7\xb5\x44\x4f\x79\x76\x71\x86\xd2\x7f\x42\x72\x42\xd7\x29\xc9\xf7\x3f\x04\xa3\x27\x05\x69\x4a\xb6\x25\x12\xb6\x9d\x7c\x2c\xbe\xe7\xd9\x17\x10\xac\xe7\x35\x44\x1e\xf7\x7a\xfa\xc6\x43\x5f\xd7\x64\x0b\x42\xe2\x6d\x17\x5a\x10\x2a\x27\xe2\xb5\xbe\xa4\xf0\x5d\x7d\x85\x76\xf5\x6b\x09\x7e\x13\xd0\xae\x7c\x67\x1f\xae\x71\xd2\xe2\x00\x67\x20\xf1\xda\x77\x76\xc6\xea\x7e\xab\x6b\xf5\x6a\x67\x0d\xab\xc3\x34\x25\xe3\xd0\x5c\x71\x56\x43\xd3\x73\x10\xaf\x49\xb3\xe3\x91\xbb\x6b\x4e\xd6\x6b\xe0\x51\x68\x07\xb8\x93\x83\xa9\xef\xf0\xff\x02\xf8\x19\xac\x08\x85\xe6\x63\x4f\x75\x17\x8a\x03\x1d\xf6\xcd\x2a\x70\x76\xca\xe8\xaa\x25\xf5\xaf\x20\x57\x5b\x53\xdf\xe3\x05\x6d\xe0\x81\xd0\xf5\x15\x6b\x49\xfd\xe8\xd8\x1d\x4d\x4a\xec\x18\x78\x72\xdf\xeb\x15\xe6\x92\xa8\x54\x3f\xc1\xa3\x17\xcd\xd1\xa4\x64\xf0\xda\x39\xf2\x74\xee\x6a\xdc\xda\x5e\xa9\x0c\x91\x1d\x4d\x4a\x06\x9f\xf5\x84\xdc\xf7\x7f\x0e\x4c\x74\x58\x12\xdc\x2a\x7f\x64\x04\xf3\x68\x52\x32\xf8\x5f\x07\x72\xcf\xef\xb3\xa6\xaa\x00\x4c\x97\xae\x28\xb2\x48\xa2\x4e\x4b\x0d\x69\x05\x16\x23\x71\xbd\xef\x25\xdb\x62\x49\x6a\x1d\xc2\x1d\x63\x6d\x8c\x22\xb6\x3a\xe9\x62\x5f\xb2\x06\xa2\x9e\x09\xca\xaa\x74\x42\xeb\xba\xed\x1b\x68\xae\xb0\xdc\x08\x74\x73\xeb\x7e\x8f\xd6\x8e\x4e\x40\x21\x0f\xfb\xcd\xe1\x61\xca\xdc\xc2\xe8\xd8\x84\x20\x1a\x11\xea\xb0\xdc\x58\x08\x1d\xed\x11\x40\xfd\xe9\xcc\xcc\xae\xf3\xe4\x26\x01\x17\x98\x58\x1b\x78\xf0\x10\x82\x74\x78\x4a\x2d\x51\x5c\xa7\xa4\x4e\x20\x67\x58\xe2\x6b\x25\xb0\xa1\x0c\x1b\x34\xc3\xba\x1f\xcd\x27\x42\x1b\x6f\xd8\x07\xed\x7b\x42\x83\x43\xe4\x8a\x43\x4d\x84\x3a\xee\x86\x53\xc3\x66\x68\xd7\x13\xa1\xbb\xd5\x09\x32\xb0\x45\x71\x90\xf5\xb4\x03\x64\xfd\xe8\x22\x54\xcd\x76\x1e\x0d\x78\x87\xf7\x8e\x00\xd0\x3d\x0c\xa3\xe0\x29\xfb\xbb\x29\x22\xbc\xb9\x8d\xb7\x14\x69\xec\x76\x2d\x3f\x89\xdd\x6f\xc0\x5d\xe4\x76\x9a\x3f\xcc\x7a\x22\x95\x49\xf6\x09\xee\x24\x46\x0b\xf1\x9d\x9a\x37\xee\x93\x5e\xc6\x7c\xcd\xd4\xa6\xff\x7c\x04\xb6\xd1\xec\x26\xdc\x0f\x53\x10\xda\x26\xc8\x32\x1a\x8c\x84\x37\x7b\xfe\xee\xf7\x66\x35\x13\x50\x46\x44\xeb\x41\x38\xd2\xac\x46\x93\xac\x0d\x72\x91\xd1\x88\x98\x1e\x2e\x3f\x20\x19\xce\xd5\x73\x70\x95\x14\xee\xa6\xe3\x4d\x52\x84\x57\x49\xe1\xec\x73\xca\xfa\xdd\xf5\xcc\xbf\xa8\x8d\xa7\x6f\x4f\xe5\xf4\xb5\xd1\xa7\xe2\xc9\xdb\xa1\xbb\xfb\xcd\xed\x91\x73\xaf\x1d\x4c\xec\xcd\xca\x51\xdc\x33\x7c\x5f\x30\x5d\x83\x97\xb3\x37\x80\x88\x6b\x79\x3c\x87\x83\x5d\x1a\x83\x24\x14\xaf\x02\xc4\x6f\xeb\xa4\x87\x08\x9d\x44\x78\x37\xb7\xd1\xa2\xb5\x8f\xb5\x0f\x41\xea\x05\xae\x32\x50\x4d\x20\xf5\xf2\xc3\x23\xa4\xa5\x03\x5e\x18\xa1\xc9\x41\x4f\x89\x90\xd4\x0e\x79\x33\x44\x1b\x1d\xf4\x38\x88\xac\xe2\x57\xc0\x25\x7e\xd0\xc7\x88\x20\x3f\x60\xc2\x6a\xeb\xa8\x04\xc6\x84\xea\xd3\xfd\x25\x63\x47\x65\x0a\xce\x2b\x0e\x2b\xf2\x90\x40\x86\x93\xc6\xc8\x02\x4c\x37\x9c\xf5\xeb\x4d\xd7\xcb\x8f\x1c\x9b\xc9\x0b\x2d\x65\xa4\x12\xbe\x57\xb0\xec\xc5\x8b\x60\x09\xad\x12\x35\x77\xf8\x62\x8a\xcf\x3d\xad\x12\xb6\xb1\x6e\xc8\x91\xc8\x4e\x5b\x02\x54\x3a\xfd\x78\xa4\xae\x1b\x77\x58\x80\x91\xe4\x59\x37\x9e\xe2\x11\x3b\x0e\xd6\xc4\x7f\x66\xa3\xda\x98\x06\x14\x69\x95\xa9\x04\xbe\xc2\x35\x68\x9a\xe0\x80\x25\xcc\x1c\xee\x9a\x23\xf7\xab\x44\xc0\x39\xe3\xf3\x3c\xfb\x2f\x11\x72\x36\x77\xdc\x5d\x48\xe0\x58\x32\x9e\x67\xef\xdb\x76\x16\xaf\xfb\x8e\xc4\xe8\xe9\x1c\xe4\xcc\xe4\x33\xb5\xd7\x19\xb4\x10\x46\xa5\x65\xaa\x59\xba\x16\xd7\x07\x45\x1c\x53\x8a\xb3\x6d\x82\x6f\xac\x61\x5c\x24\x95\xbb\x4d\xcb\x2d\x55\x58\xc6\x3c\xab\x19\x95\x84\xf6\xd8\xfe\xef\x86\x2a\x5a\xd6\x30\x3a\xde\x14\xd4\x0b\x21\xaa\xe3\xce\x79\x58\x49\x62\x41\x0e\x6a\x39\x1a\xb8\xd5\xfc\x0c\x0f\xaa\x46\x69\xdc\xcd\x9e\x9f\xe1\x67\xd4\x11\x1c\x64\xcf\xa9\xda\x99\xc2\xcf\x44\x1f\xad\x7a\x5a\xa7\x0c\x67\x35\x3a\xf3\x9a\xb5\x44\xcd\x1d\x69\x90\x45\x39\xda\xe8\x29\xcf\xcc\x5e\xe8\x6d\x08\xdd\x53\x9e\x65\x7e\xe7\x9f\xa0\xba\x9a\x05\xd3\x30\x2f\xf3\x4c\x0f\xc4\x89\x33\x78\x45\x73\x27\x16\x05\x3a\xd6\x9b\x97\x79\xf6\xac\x52\xd5\x31\xcf\x6a\x14\xd5\x68\x8e\x86\x9e\xa7\xf0\x53\xc9\x90\xdf\x49\xe1\x92\x86\x6f\x80\x50\xc5\xaf\xbe\x96\xa8\xae\x1a\x36\xdb\x48\xd9\x55\x97\x20\x37\xac\xb9\x62\x42\x96\xa8\xae\x54\x68\xc7\xc5\x42\x39\x11\x45\x89\x0a\xfb\xc3\x48\x4a\xa4\x4d\x0c\xe5\x98\x28\x9a\x12\xbd\x1d\x02\x29\x0d\x28\x25\xa2\xa4\x9d\x5b\xa0\xf6\xa4\x32\x39\x94\x69\xa8\xdd\x3e\x7e\x0a\xbd\x9d\xa0\x7a\x1f\x72\x6a\xd0\x49\x62\xb7\x89\x96\x53\x41\xe0\xb6\xd5\x20\xa0\x93\x25\x7a\xeb\xe8\x3c\x3d\xe7\x79\xb6\x32\x81\x66\x5a\xc3\x20\x7d\xb2\x44\xa4\x32\x7d\x9c\x67\x19\x59\xe9\xc5\x37\x4b\x05\x8a\x56\xb5\x59\x51\xd2\x6a\x83\x3c\xcb\x9e\x8d\xa2\xd9\x66\xe9\xa8\xde\x71\xc0\xf7\x5a\x21\xcf\x76\x81\x54\xe6\x66\x74\xbc\x44\xce\xa7\x2b\x77\x4e\x77\xab\x33\x2e\xf9\x8e\xc6\xeb\xdf\x12\xe1\xae\x03\xda\xcc\x52\xd2\x12\x45\x4b\x55\x55\xcd\x73\x1d\xd8\x90\x8f\xb5\xd3\xe5\xdf\x53\x06\x45\xa0\x6a\xd5\x19\xb5\x5f\xec\xdb\x73\x88\xda\x76\x51\x1c\x1b\xdf\x51\xfb\x26\x34\x9c\x7e\xfe\xdf\xa7\xd2\x14\xe5\xf5\x5d\x3c\xd0\x7d\x3c\x8d\x3a\x7c\x15\xfd\x50\xde\x4a\x5f\x6d\x96\x4b\x54\x14\xba\xc2\x03\x76\x1f\x38\x57\x82\x2f\xf0\x67\x4f\x38\x34\x0a\xd7\x6c\x03\xb8\x01\xae\xdb\x4e\x07\xf9\x1f\xfd\xfd\x34\x4a\xaa\xaf\x20\x67\xc5\xc5\xea\xdd\x25\x96\xf5\xa6\x28\xc7\x0d\x76\x61\x47\x70\x99\x40\x27\xf0\xa8\x2e\xce\xf6\x41\xa6\x55\x1c\xcc\x3e\xb3\x53\x46\xa5\x26\x4e\x0d\x9d\xfe\x67\x88\x6f\xbe\x07\x34\x7b\x10\xfe\xdb\x34\xb6\x28\x8e\x87\x2d\xf6\x24\xe8\x6a\xfd\xd3\x3c\x97\x38\xca\xc3\x01\xe8\xee\xb9\x40\x53\xc7\xfa\xdf\x1a\x84\xe3\x62\xd1\xdd\x9b\x87\x97\xe2\x74\xe7\xf7\xeb\xe6\x42\x45\x38\x95\x35\x71\xb3\x76\x69\x7a\x8e\xec\xa1\x6e\xf8\x2d\xe2\x59\x27\x35\xb2\x42\xa4\xd2\x97\x8d\x71\x38\x0c\xc9\x4c\x4f\x83\xb6\xf1\x6e\x2d\x6f\x76\xe3\xe5\x4d\xca\xef\xef\x2e\xc5\xbb\x53\x47\xb1\x28\x03\xcb\x81\xd0\x0c\xc0\x24\x05\x30\x99\x3c\x20\x49\x7c\x40\xfa\x84\x22\x9c\xc1\x48\x1c\x0b\x6e\xb2\x41\x3e\x4b\x6b\x58\x9d\xa7\xf3\x50\x0e\x0d\x6c\xcb\x10\x0b\x4d\x35\xb9\x53\xae\xbf\x02\x00\x00\xff\xff\x09\xad\x74\x44\x11\x1b\x00\x00")

func collectionGoBytes() ([]byte, error) {
	return bindataRead(
		_collectionGo,
		"collection.go",
	)
}

func collectionGo() (*asset, error) {
	bytes, err := collectionGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "collection.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cosmosdbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xdf\x4f\xdc\xba\x12\x7e\x4e\xfe\x8a\x69\x24\x50\x02\xc1\xbb\x70\x4b\x75\xb5\xbd\x79\x68\x61\xe9\x4f\x68\x6f\xd9\x3e\xb5\x47\xaa\x49\x26\x1b\x97\xc4\x4e\x6d\x07\xba\x45\xfc\xef\x47\x63\x7b\xd9\x85\xe5\x54\x95\x0e\x12\xda\x64\x6c\xcf\x7c\xf3\x7d\x33\xe3\xf4\xbc\xbc\xe4\x73\x84\x52\x99\x4e\x99\xea\x22\x8e\x45\xd7\x2b\x6d\x21\x8d\xa3\xe4\x62\x61\xd1\x24\x71\x94\x94\x7a\xd1\x5b\x35\x6a\x3a\x5e\xae\xbd\x9a\x86\x1f\x1c\x3e\x23\x03\xca\x52\x55\x42\xce\x47\x17\xdc\xe0\xb3\xa7\x64\xaa\x3b\x4b\x3f\x42\x8d\x84\x1a\xac\x68\xe9\x45\xa2\x1d\x35\xd6\xf6\xcb\x67\x8b\x3f\x6d\xaf\x95\x55\x4b\xc3\xa0\xdd\x3e\x63\xb5\x90\x73\x17\xd9\x8a\x0e\x93\x38\x8e\x92\xb9\xb0\xcd\x70\xc1\x4a\xd5\x8d\x86\xb9\xd2\xdf\xc5\x68\xae\x46\xa5\xaa\xb0\x4c\xe2\x2c\x8e\x47\x23\x98\x6a\xad\x34\x68\xec\x35\x1a\x94\xd6\x00\x97\x80\x64\x8b\xed\xa2\xc7\xb0\x6c\xac\x1e\x4a\x0b\x37\x71\x74\x6e\xb9\x1d\xcc\x91\xaa\x10\x84\xb4\x71\xe4\x9e\xfc\x9f\x8f\x0f\xdf\xbe\x1b\x25\x27\x09\x05\x49\xbe\xc5\xd1\x29\x1a\x43\x54\x6d\x6c\xe8\xfc\x42\xf2\x2d\xbe\x8d\xe3\x7a\x90\x25\xa4\x21\x5c\xe6\x7f\xd2\x6c\x79\xe2\x26\x8e\x34\xda\x41\x4b\xa8\x3b\xcb\xce\x7b\x2d\xa4\xad\xd3\x64\xab\x82\x2d\x33\x81\x2d\x93\xe4\x80\x6c\x85\x8c\xde\x96\xbf\x21\x7c\x46\x41\x46\x23\x78\x63\x9c\xeb\xb5\x2c\xbc\x63\x03\x56\x0f\x08\xa2\xa6\xdc\x41\x18\x50\x35\xac\xe5\xcf\x65\x05\xc2\x1a\x58\x9d\x23\x67\x1d\xb7\x65\x83\x06\xcc\xca\xea\xf2\xd8\x08\x92\x92\x53\x47\x6a\xbe\xb6\x99\x08\xcc\xe0\x42\xa9\x96\x12\xf4\xa1\x73\x50\x97\x30\x29\xe8\x91\xa5\x9e\x8c\xe7\x64\xba\x89\xa3\x25\x05\xb4\xb4\x86\xbf\x28\xd6\xe3\x47\xb7\x2b\xaa\x78\x6b\x30\xa4\x3d\xd5\x7a\x3a\xe3\xf3\x4f\xf8\x63\x10\x1a\x2b\x4a\xd0\x36\xe8\x21\x05\x06\xc8\x5a\x3b\x2b\xed\x84\x5a\x60\xeb\xf6\x49\x65\xa1\x57\xfd\xd0\x72\x8b\xa0\x24\x70\xf2\xf7\xf1\xf3\x0c\x94\x86\xe3\xe9\xfb\xe9\x6c\x0a\xaa\x47\xcd\xad\x50\x32\xbe\xe2\x7a\x23\x56\xe1\x44\x73\xb9\xd4\x69\xe2\x9c\x0b\x03\x3a\x2c\x27\xbe\x0a\x3f\xa1\xd5\x8b\x0f\xf2\xa3\xc6\x52\xc9\x4a\x90\xb3\x13\x2e\x5a\xac\x08\x9d\x16\x68\x80\x03\x71\x4b\x0b\x84\x53\x58\xa8\xb9\x68\x0d\x54\x03\x82\x55\x0e\xd3\xc6\x59\xaf\xc6\x3f\xba\x4e\x6b\xe7\x32\xcd\x3c\x0f\x19\xac\x64\xca\x88\xf0\x5a\x69\x10\x24\xc6\xf8\x39\x08\xf8\x1f\x1c\x3e\x07\xb1\xbb\xeb\xa4\xa0\x8d\x05\xd4\x69\x16\x47\x24\xdc\x93\x47\x15\xcf\x81\xba\x36\x68\xb5\x19\xde\xc5\x58\xaa\x1a\x47\xa4\x5c\x44\x7d\xcb\xce\x5b\xc4\x3e\x75\x8f\xc7\x83\x27\x36\xdd\x1f\x8f\x77\x44\x06\x3b\xe0\xcc\xa7\xa2\x6d\x85\x71\x0e\xb3\x35\xc9\x49\x6c\x52\xa0\x81\x02\xb6\x5d\x93\xb3\xb7\x46\xc9\xd7\x5c\x56\x2d\xde\xc4\xd1\x4b\x6e\x44\xe9\xdf\x26\xe0\xd7\xd7\x4c\x84\xe6\x18\xc9\xfc\xa1\xa7\x98\x66\xb9\xe7\x9e\xd1\x61\x76\xc9\xbe\xa9\xcf\xd4\x09\x55\xc9\xc4\xf5\x4e\x4e\x29\xe4\x31\xfd\xdf\xf5\x73\x09\x3b\x15\xb7\x9c\xc6\xdb\x51\x2b\x90\xca\x9d\x0f\xb6\x51\x5a\xfc\x42\xaa\x0f\x34\x36\xd5\xf8\x03\x76\x1c\x51\xc1\x92\x83\x46\xa3\x06\x5d\xe2\x6c\xd1\xe3\xea\xed\xbd\x90\x97\x61\x20\x38\xea\x2a\x2a\xc8\x49\xe1\x19\x39\x53\xd7\x69\xc6\x3e\xcf\x8e\xd2\x8c\x9d\x28\xdd\x71\x9b\x26\xa7\x4a\xe6\x30\x3e\x80\xb7\x5c\xc2\xc1\x78\xfc\x0c\xf6\x0f\x27\xe3\xa7\x93\xf1\x21\xbc\x3a\x9d\x51\xdd\x45\x0d\x9d\xa7\xf1\xcc\xce\xf0\x3a\xf5\x83\x99\x1e\x73\x28\x59\xc7\x8d\x45\xfd\x0e\x17\x59\x1c\x51\x01\x9f\x84\xa9\xd3\xe4\x90\x6c\x99\xaf\x72\xfd\xff\xab\x4c\xf2\x00\xcd\xb0\x99\x7a\xaf\xae\x51\x53\x62\xec\x14\x6d\xa3\xaa\xec\x77\x29\x6d\x1e\xa4\xc4\x32\x82\x47\x1e\x5e\x23\xaf\x50\xb3\x73\xb4\x69\xf2\x22\x70\xe7\x4a\x22\xc9\x61\xd0\x2d\xfb\xff\x80\x7a\x31\x35\x25\xef\x31\xbd\x37\x1c\x69\x7a\x15\x3e\x89\xed\x2b\xd4\xc5\x3e\x1b\x6f\x1b\x31\x2f\xdc\xb4\xf4\x17\x0e\x3b\xb7\xd5\x34\xdc\x41\xcc\x3d\xe0\x4c\x9d\x3b\x34\x69\xc3\xce\x87\x2e\x95\xa2\xcd\xe8\x6f\x13\xcb\xcf\xbd\xce\xec\x11\xd2\x24\x07\x07\xf8\xb7\xaa\x57\x2a\xed\x1c\x15\x39\xf4\xdc\x36\x7f\x20\x71\x0e\xf8\xb3\xc7\xd2\x62\x75\xff\xc6\xc9\x41\xc8\x1c\xd4\x60\xe9\x05\x75\xcd\x4b\xbc\xb9\xcd\xa1\x71\xd0\x8c\xef\x38\x8f\x33\xb4\xb5\xbf\x3c\x7e\xe4\x6e\xb0\x93\xdc\xb4\xe3\x0c\xaf\x97\xf5\xb7\xc4\x95\xd0\x82\x99\x8c\x46\xc9\x6e\xc9\x96\xf8\x5f\x94\xa5\x1a\xa4\xdd\x4d\x58\xa5\xca\xa1\xa3\xfb\x91\xf1\x5f\x83\x46\x77\xa3\x26\xbb\x3e\x19\x62\x69\x39\xc0\xe1\x49\x41\xef\x0f\x06\x36\x35\xa9\xdb\x21\xe4\xfa\x86\x8b\xa1\x26\x48\xdb\xee\x8b\x81\xbd\x1c\xea\x1a\xf5\xcd\x6d\x98\x2f\x93\x22\xf4\xdf\x19\x5e\x7b\x71\x74\x7a\x31\xd4\x39\x34\x59\x10\x2b\x15\x32\x0c\xa0\x07\x81\xef\x45\x76\x83\x85\xe4\x7b\xa9\xaa\x05\x14\xe0\x3f\x2c\xd8\x99\xea\x8f\x5a\x65\xbc\xd3\x2c\x6c\x59\x57\xf8\x48\x49\x8b\xd2\xee\x91\x44\x49\x0e\x09\xef\xfb\x56\x94\xae\xf6\x46\x74\x83\x27\x99\xcf\x8a\xc6\xe4\x65\x0e\x57\x04\x58\x73\x39\xc7\x3b\x31\x6e\xee\x79\xfd\x72\xf7\xdd\xc2\x8e\xb8\x54\x52\x94\xbc\x3d\x7d\x73\x3a\xf5\xab\xef\x70\x91\x5e\x66\x7f\x41\x01\x57\xde\xed\xa3\x05\x77\x85\xda\xf8\xda\x4f\x0e\xc6\xfb\xff\xdd\xdb\x3f\xd8\xfb\xcf\xbe\x6b\xe5\x92\x3d\x36\x59\x7e\x57\x68\xbe\xc3\x4c\x7f\x57\x19\x25\x6b\x4a\x76\xac\xe8\xdc\x1f\xc8\x19\x55\x58\x23\x5d\x9e\xa6\x77\xcc\x32\xc7\x66\x9a\x79\x9d\x97\x14\xac\x1d\x77\x3c\x3d\x4e\x52\x54\x61\x8b\x16\xd3\x60\xcb\xe1\x32\x0b\xba\x6d\x92\xeb\x02\x7a\x62\xfc\xd9\x70\xe8\xcb\x65\x20\x8f\xce\x11\x81\xd5\xbd\x0a\xf2\x43\x9c\xa6\x52\xc0\x4b\x75\xe4\xb1\x3a\xd3\x5a\x97\x3d\x29\x1e\xeb\x3d\x8a\x45\x97\x0b\x91\xe2\xe6\xbf\xaf\xbc\x35\x38\xec\xd5\x46\xd9\x64\xf4\x79\xb2\x59\x39\x21\xe9\x70\xb3\xa4\xdb\xa8\xf5\x32\xe1\x87\x5f\x37\x0f\xd1\x3d\xde\x56\x34\x0f\x02\xd5\xdb\xdb\xff\x02\x53\x70\xbd\x42\xa6\x06\x9b\x2d\xeb\xd1\x2d\x49\xd1\xc6\xb7\xf1\xdf\x01\x00\x00\xff\xff\x42\xf7\xa3\x62\x00\x0c\x00\x00")

func cosmosdbGoBytes() ([]byte, error) {
	return bindataRead(
		_cosmosdbGo,
		"cosmosdb.go",
	)
}

func cosmosdbGo() (*asset, error) {
	bytes, err := cosmosdbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cosmosdb.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _databaseGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x96\xcf\x6f\xdb\x36\x14\xc7\xcf\xe4\x5f\xf1\xaa\x43\x20\xa5\x8a\x72\x19\x76\x30\xa0\x43\x91\x04\x59\xd0\x25\x1b\xea\x0e\x18\x50\x14\x2d\x45\x3d\xdb\x5c\x65\xd2\x23\xe9\x65\x81\x91\xff\x7d\x20\xa9\x1f\xa4\x6c\x77\xa8\x0f\x4e\xc4\xf7\xf8\xde\x97\x1f\x7e\x49\x79\xc7\xf8\x37\xb6\x46\xe0\xca\x6c\x95\x69\x1b\x4a\xc5\x76\xa7\xb4\x85\x9c\x92\x0c\x25\x57\xad\x90\xeb\xeb\x86\x19\xfc\xf9\xa7\x8c\x92\x4c\xa2\xbd\xde\x58\xbb\xcb\x68\x41\xe9\xf5\x35\xdc\x32\xcb\x5c\x14\x34\xee\x34\x1a\x94\xd6\x00\x83\xb6\x1f\xa5\xf6\x65\x87\x53\x8e\xb1\x7a\xcf\x2d\x1c\x28\x79\xb8\x85\xf1\x63\xac\x16\x72\x0d\x5f\xff\x32\x4a\x2e\x32\xd1\x96\x6a\x2b\x2c\x6e\x77\xf6\x25\xfb\x4a\xc9\x07\x34\x6a\xaf\x39\xba\x19\x69\xe6\x17\x3d\xcf\xfd\x28\xb6\x68\x2c\xdb\xee\x00\x40\x48\xeb\x8a\x0f\xb9\xd6\xa4\xa9\x4b\xec\x56\xa7\x05\x7c\x31\xd8\xad\xd2\xe4\xbb\x8f\x6c\x7d\x26\x19\x2d\x5b\xa7\xc9\x37\xaa\xeb\x90\x5b\xa1\xa4\x99\x27\x73\xd5\x75\x33\x1d\x7f\x18\xd4\xe6\x74\xe9\xbd\x0b\x25\xd9\xaf\x09\x72\x13\x33\x1f\x88\x9b\x14\xb9\x89\x98\xdf\xa8\x7d\x60\x32\xc2\x81\x98\x10\x77\xe1\xb3\xec\x7b\x6d\xc9\x8c\x23\xfe\x53\x57\xf8\xf4\xf9\x72\xdc\xf6\x3e\x7f\x8c\xce\xd7\xe4\x15\x0f\x0b\xb8\xe9\x04\x4a\x1b\xc9\xde\x70\x48\x3e\x97\xce\x7e\x55\x48\xa3\x64\x98\xf6\x8e\x7b\xfd\xbd\x4e\x4a\xb6\xcc\x58\xd4\xef\xf1\xa5\x9f\xf5\xe9\x73\xf3\x62\x71\x46\xb0\xef\x25\x62\xcb\x02\x0f\x95\x13\x8c\x43\xa2\xb4\xa8\x57\x8c\xa3\xc7\xa9\x91\x59\xcc\xc7\x65\x16\x30\xfd\x5f\x02\x6a\xad\x74\x41\xc9\xaf\xc2\xd8\xbc\x18\x0b\x3d\x58\xd4\xcc\x2a\x4d\xc9\xbb\xae\xcb\xe7\xa3\x71\x09\x33\xd5\xb8\x47\x9b\x87\x75\x9d\xee\x71\x8b\x1d\xa6\x4a\x7c\xe4\x08\xad\xd3\x32\xb4\x8a\x00\x5f\xa6\xe8\x29\xe1\x4a\x5a\x21\xf7\xcc\x79\x78\x04\xda\x2a\x89\xe3\x1e\x34\x4a\x75\x33\x96\x63\xe1\x94\xa6\x18\x16\x9c\xf0\x9c\x92\x63\xa2\x4f\xf8\xaf\x63\x75\x8a\x41\xe8\xf5\x84\xcf\xb3\x1d\xd1\x68\xf7\x5a\xba\x8e\x12\x9f\x8f\xf6\x70\xb5\x97\xfc\x78\x52\xbe\xe1\x89\x89\x4a\x98\x99\xa8\x84\xc9\x3d\x23\xf7\xb4\xc6\x20\xcc\xc9\xfe\x87\x69\xf7\xd4\x43\xa7\x84\xc3\xa2\x86\x8b\x14\xea\x81\x12\xb2\xe1\x8b\xd4\xc9\x1b\x5e\x52\x32\x77\xf0\xe2\x48\x0d\x25\xaf\xae\x6a\x35\x8a\xf2\xcd\xa1\x86\x70\x2b\x57\x4b\xdb\xde\xf5\x17\x75\x75\x8b\x5c\xb5\xb8\xf4\xa2\xf3\x71\x42\x41\x89\x58\xf9\x49\x6f\x6a\x90\xa2\x73\xaa\x49\x40\xe7\x1e\x7d\xbd\xd0\xa5\x1f\xe4\xa5\x1b\x77\xd4\x3d\xc2\x9c\xc3\xcc\x24\x05\xf4\xf6\x97\xf8\xdc\x36\x10\x1f\x82\xf8\xb1\x9c\xc0\x78\x54\x41\x37\xaf\x5a\x95\xfb\x0d\x78\x44\xbb\x51\xed\xef\xca\xd8\x12\xb2\xb6\x31\xd9\xf4\x27\x2b\xc1\xa7\x2c\x2d\xb3\x7b\x13\xba\xb5\x25\x5c\xf8\x86\x25\x5c\xb8\x2f\x29\xba\x62\xd0\xfc\x5d\xb1\x67\x4e\xa1\x93\xd4\xaf\xf8\xe2\xd4\x21\x39\xa4\x75\x16\xc0\x5f\xbf\xdb\xc6\x9d\x69\x71\xd4\xe5\xa4\xa3\x5d\x6b\xd6\x75\x6d\x63\xbc\x5b\xc6\xf8\xc1\xed\xc2\x2a\x48\x23\x6d\x13\xf2\x5d\x8a\xa8\xc2\xf1\xa0\xe4\xc4\x5e\x1e\x6f\x26\x79\x0d\x89\xae\x41\x1d\x25\x36\x1a\xd9\x37\x1f\xa6\xa4\x17\x50\x85\x17\xc3\xdb\x1a\xc6\x87\x29\x16\xbd\x02\x42\x7c\x1a\x98\x92\xa6\x7b\xbf\x06\xb6\xdb\xa1\x6c\xf3\x79\xa4\x84\xe4\xb1\xaa\xaa\x22\x71\x5c\xc8\xff\x7f\xdb\xb9\xbb\xb0\x6d\x44\x3b\x1d\xcc\x1f\xf7\xdb\x3d\xf6\x76\xbb\xce\xde\xba\x5a\x89\xf7\xc6\xb1\xc8\x7d\xbf\xbd\x2f\x03\xda\x1f\x73\x5d\x7f\x2f\xa7\xe7\xc3\x8b\x73\xda\xfc\xe6\x54\xfe\xa7\x45\x5d\x43\x96\xc5\x87\xf2\x4e\x6b\x17\xf8\x80\x7f\xef\x85\xc6\xd6\x91\x22\x1b\x64\xad\xfb\xad\xb0\xa8\x83\xb4\x5f\xfc\xf3\x61\x8a\x54\x4b\xb4\x79\xf6\xb0\xba\x7a\x64\x96\x6f\xb2\x72\x28\x5f\x4c\xc7\x7a\x06\x22\x08\x8c\xd6\x5d\x3d\xdc\x1e\xc3\xf0\x83\x11\x8d\x27\x75\xa3\xa4\xf5\x97\xa0\x87\xe2\xbf\x7a\x0d\xc5\x04\x44\x4c\x40\xe2\x33\x55\xc0\x70\xcd\x3b\x6b\xce\x0e\x46\xb4\x75\x62\x05\xa2\xf2\x2f\x9d\x89\x4b\x70\xcc\x79\x10\x7e\x4e\xf2\xf6\x7a\x33\x92\x4d\x20\xfd\x79\xf5\x68\xae\x6e\xa2\xc4\xac\x9c\xcd\xec\xdd\x19\x0c\x24\xce\x19\xe8\xec\x7d\x15\x3b\xc6\x44\x74\xce\xde\xc3\xa1\xdd\x4c\x7d\x3d\x4c\xac\xee\x4f\xab\x76\x05\x03\xa4\x7a\xbe\x72\xef\x29\x1a\xf9\xf4\xbf\x00\x00\x00\xff\xff\x16\x86\x7d\xa4\xea\x0b\x00\x00")

func databaseGoBytes() ([]byte, error) {
	return bindataRead(
		_databaseGo,
		"database.go",
	)
}

func databaseGo() (*asset, error) {
	bytes, err := databaseGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "database.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _documentGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xcd\xaa\xc2\x40\x0c\x85\xd7\x9d\xa7\x08\x5d\x5f\xe8\xfe\x3e\x84\xe8\xc6\x8d\x08\x8d\x35\x94\xaa\x99\x19\x93\x54\x28\xe2\xbb\x4b\x7f\x9c\x32\x9d\xd5\x24\xe7\x7c\xe4\x8b\xd8\xdc\xb1\x25\x68\x82\x72\xd0\xeb\xc5\xb9\xaa\x82\x43\x4f\x32\x80\x50\x14\x52\xf2\xa6\x80\xf0\x1c\x57\xce\x86\x48\x4b\xaa\x26\x7d\x63\xf0\x76\xc5\x3c\x4f\x4f\x4d\x3a\xdf\xce\xff\xfa\xa6\xc1\xff\x97\x13\xf8\x17\xb8\x33\xe2\x68\x43\x59\xbb\x62\x8f\x82\x4c\x46\xa2\x70\x3a\xa7\xe1\x07\xc4\x94\x66\xd4\x67\x32\x5b\xdb\x99\x5d\x62\x66\xc3\xb5\xb5\x5a\xee\x90\x29\x09\x2e\xa7\x3c\x32\xe5\x6a\x47\x7c\xf4\xb4\x69\xbd\xc6\xdd\xc6\xe5\x1b\x00\x00\xff\xff\xa1\x09\x70\x18\x37\x01\x00\x00")

func documentGoBytes() ([]byte, error) {
	return bindataRead(
		_documentGo,
		"document.go",
	)
}

func documentGo() (*asset, error) {
	bytes, err := documentGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "document.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x4d\x6f\xe3\x36\x13\x3e\x8b\xbf\x82\xab\x43\x20\xc5\xb2\x74\x37\xe0\xc3\x0b\x27\xc8\x1b\xb4\x49\xd3\x6c\x0e\x05\x8a\x02\xa1\xa9\xb1\xcd\xb5\x2c\x6a\x49\x0a\x69\x60\xe4\xbf\x17\x24\xf5\x41\xca\x92\xb7\x29\xb6\x69\x9b\x43\x14\x51\xf3\xfd\xcc\x33\x9c\x54\x84\xee\xc9\x16\x30\xe5\xf2\xc0\x65\xbe\x46\x88\x1d\x2a\x2e\x14\x8e\x50\x10\x96\xa0\xb2\x9d\x52\x55\x88\x50\x50\xed\xb7\x38\xdc\x32\xb5\xab\xd7\x29\xe5\x87\xec\x0b\x3b\xcc\x0f\xac\x54\x20\xb2\x2d\x9f\xb7\xea\x59\xb5\xdf\x66\x5b\x28\xbb\xf7\xee\x8f\xbc\x3e\x1c\x5e\x43\x14\x23\xa4\x5e\x2b\xc0\x0a\x0e\x55\x41\x14\xac\x0a\x06\xa5\xc2\x52\x89\x9a\x2a\x7c\x44\xc1\x65\x4e\x14\x59\x13\xd9\x7c\x41\x41\x45\xd4\x0e\x77\x3f\x52\x09\x56\x6e\x51\xc0\xe4\x03\x11\x8a\x29\xc6\x4b\xc8\xf1\x9a\xf3\x02\xbd\x21\x94\x65\xf8\xc9\x37\xcc\x24\x26\x9d\x33\x4c\xad\x4d\x13\xc1\x50\x50\xa7\xb2\x21\x14\x74\x10\x2b\x01\x44\x41\x64\x9d\x25\xf8\xb2\xda\x6f\xd3\x56\x3e\xc6\x91\xf7\x9e\x60\x10\x82\x8b\x18\x05\x3f\x32\xa9\xa2\xb8\x33\x7c\xab\x40\x10\xc5\x05\x0a\xfe\x57\x14\xd1\xf0\x74\x68\x46\xf6\x76\x6e\x40\x75\xae\xed\x73\xda\xe7\x23\x54\x05\xa1\xef\x0e\xf5\x0a\x0a\x98\x4e\xd0\x48\xa1\xe0\xe7\x1a\xc4\x6b\x74\x69\x1e\x23\x69\xbd\x0d\xa0\xd4\xe9\xb7\x1f\x5d\x40\x7d\xa8\x51\x40\x79\xa9\x58\x59\x13\x8d\x5d\x87\x67\xce\x4b\xe8\x40\x6e\xe1\xf4\xcc\x9b\x30\xfe\x8c\xfd\xaf\x5a\xb0\x35\x65\xa3\x7f\x8f\x53\xa7\x87\x3a\x6f\x7e\x17\xb1\xb6\x02\x5e\x1f\xf5\xc2\x6e\x27\xdd\xc3\xef\xba\x27\xa6\xb0\xb6\xfe\xee\xe1\x65\xd0\x8d\x02\x54\x2d\x4a\xed\xb5\x84\x97\x93\xfe\xdd\xd4\x25\x3d\x55\x8a\x28\x2f\x0a\x8a\x57\xbc\x28\x80\xea\x3c\xed\x71\x82\xf5\x39\xcb\x71\x0b\xf6\x29\x75\xe2\x21\x19\x8e\x28\xb0\x11\xe0\x0b\xbf\xba\x47\x14\x04\x3e\x41\x17\xc6\x3c\x4d\xa3\x4b\x3a\x70\x1c\xa7\xbe\x64\x82\x02\x43\xe6\x45\xcf\xe6\x33\xba\x86\xf6\x33\x1c\x66\xfa\x93\xcc\x42\x3c\x6b\xf2\xd0\x66\xbc\x14\x16\xd8\x4f\x29\x41\xc1\x9b\x2e\xac\xa9\x52\x44\xf1\xa0\x41\x62\xdc\xb0\xbb\x6a\x55\xf6\xf0\xda\x15\xa7\x84\x97\xae\xda\x43\x2e\x8d\x7f\x30\x58\x36\x78\xea\xc2\xed\x80\xe4\x20\x24\x5e\x2c\xb1\x9e\x9d\xe9\xff\xcd\xfb\xf1\x0d\x05\x6c\x83\x3d\x9f\x9f\x96\x38\x0c\xb5\x4a\xab\x93\x7e\x06\x15\x85\xbf\xcc\xef\xe4\xfc\x8a\xd3\xfa\x00\xa5\xca\xd7\xf3\x07\x47\x27\x4c\xf0\xf3\xaf\xe1\xf3\xcc\xb5\x33\x7b\x0e\x7f\x7b\x8e\x75\xd2\x81\x8e\x64\x89\x69\x9a\xf3\xc8\xf8\xbe\x03\xb5\xe3\xf9\x03\x97\xba\x0b\x4c\x49\x67\x61\x96\x73\x2a\xc3\x04\x87\xcd\xd3\x9e\x27\x36\xd8\xcf\x8a\xa8\x5a\xda\x02\xe5\x09\xbe\x70\xca\x91\xf4\xbd\x90\xe0\x26\xe0\xb8\xed\x93\xb3\xf5\x9e\x98\x8b\x63\x5d\xe6\xce\x90\xa3\x6f\x67\x81\xe9\x79\x58\xf5\x94\x65\x27\x5e\x26\xb9\xa7\xdd\x93\xa2\x68\xad\x18\xc0\x2e\x3c\xc9\xe3\x1b\x42\xc1\xc6\x06\x1a\x28\x4f\x5f\x0b\xb3\xd4\x92\x5b\xf7\xe3\xc6\x1c\x7e\x5a\xe2\x92\x15\x46\xbc\xcd\xac\x64\x85\x51\x40\x81\xc6\x47\x0b\xf6\x0e\x97\x8e\xf8\x5a\x00\xd9\x1b\x21\x14\x78\x61\xa5\x2b\x5e\x97\x0a\xcf\x96\x78\x70\x34\x94\x7b\x04\xc9\x6b\x41\xe1\xf6\x0a\xbb\xb2\xfd\xf1\x50\xe1\xa9\x0f\x04\x93\xaa\x82\x32\x8f\xc6\xbf\x27\x78\xe4\x30\x4d\x53\xd3\x73\x1d\x86\xae\x6e\xa2\x13\x3b\x0b\x96\xbe\xe3\xdc\x26\xee\x7d\x74\x93\xea\x3f\xcc\xb8\x1b\x18\x12\x2e\x0b\x67\x7d\x82\x43\xf2\x8d\xcb\x38\x84\xfc\xe9\x87\xc4\x76\xd2\x5f\xa5\x60\xbb\x26\xfc\x4d\x33\x8f\x6d\x5c\x23\xe9\xf5\x13\xd9\xea\xee\x6e\x6a\xed\x52\xe1\x5a\x08\xfd\xf5\x11\xbe\xd6\x4c\x40\x6e\x6a\x38\x8d\x9f\x87\xd2\xed\x66\x7e\x47\x14\xdd\x85\xc9\x89\xb3\xf8\x1f\x1c\xae\xf5\x08\xd4\x6e\x7c\xb7\x57\xd3\x70\x0f\xe5\x06\x90\x7f\x9f\xf1\xdb\xec\x7a\xa3\xd0\x4f\xe1\x6e\xa0\x6d\x90\xfd\x06\xac\xdf\x07\xd1\x8f\x87\xb3\x09\x7f\x88\xa7\xad\xd6\x34\x33\xcf\xe2\x39\x05\xe6\x3d\x5f\xf1\x52\x99\x65\xcc\xb0\xc0\xfc\xea\x40\x3c\x07\x9e\xdd\xc1\xed\x4a\x3b\xb5\x89\x8f\x5d\xa4\xde\xb6\x7c\x7a\x93\x26\xd8\x98\x5c\xd8\x87\x73\xaf\xb2\x3e\x04\xf7\x2e\x8e\x71\xbb\xc8\xf6\xd7\xd7\xc8\xb5\xea\x8f\x04\x96\x9a\x05\xbb\xef\x15\x7b\x5f\x9c\x1d\xd7\x2c\xf5\x36\xf5\x73\xb0\xaf\x1c\xc1\x30\x19\x68\x36\x77\x93\xe5\x2c\x1b\x1b\xcf\x6c\x62\x1f\x62\xa7\xfb\xd0\xe9\xf8\x95\x2e\x07\x4f\x6f\x7f\x37\xdd\x41\x46\xcb\x56\x31\xbd\x19\xcf\x44\x1b\xb4\x85\x5b\x0e\xab\x61\xb8\x87\x4e\x49\xef\x80\xe6\xe1\xfe\x31\xa8\x9d\x25\xe4\xad\x34\x1d\xa6\xeb\xfb\x24\x6a\xd0\xd9\x79\xf2\x0d\x2f\xe6\x4f\xaf\x15\x68\x21\x52\x55\x05\xa3\x26\xdd\xcc\x68\xce\xbe\xc8\xa6\x28\x3a\x34\xff\x7f\x97\x6f\x8e\x03\x53\x8d\xf9\x75\x49\xd6\x05\x50\xc1\xa5\xec\x66\x81\x1b\xd0\x07\x76\x9e\x5d\xc5\xdf\xd9\x7a\x17\x2c\x35\xa5\xf8\xf7\xf5\xdf\x1f\x01\x00\x00\xff\xff\xf7\xef\x58\x71\x3e\x12\x00\x00")

func templateGoBytes() ([]byte, error) {
	return bindataRead(
		_templateGo,
		"template.go",
	)
}

func templateGo() (*asset, error) {
	bytes, err := templateGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"collection.go": collectionGo,
	"cosmosdb.go":   cosmosdbGo,
	"database.go":   databaseGo,
	"document.go":   documentGo,
	"template.go":   templateGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"collection.go": &bintree{collectionGo, map[string]*bintree{}},
	"cosmosdb.go":   &bintree{cosmosdbGo, map[string]*bintree{}},
	"database.go":   &bintree{databaseGo, map[string]*bintree{}},
	"document.go":   &bintree{documentGo, map[string]*bintree{}},
	"template.go":   &bintree{templateGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
