// Package gencosmosdb Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// cosmosdb/collection.go
// cosmosdb/cosmosdb.go
// cosmosdb/database.go
// cosmosdb/document.go
// cosmosdb/template.go
package gencosmosdb

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _collectionGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x4b\x6f\xdb\xb8\x16\x5e\x4b\xbf\x82\xd5\xa2\xb0\x13\x55\xde\x07\xf0\xa2\x48\xda\xdc\xa0\x37\xbd\x41\x9b\x3b\x18\x20\x08\x5a\x46\x3a\xb6\x39\x91\x49\x0d\x49\xb5\x09\x82\xfc\xf7\x01\x49\xd1\xe2\x4b\xb1\xd3\x99\xc9\xa2\xb0\x78\xde\xdf\x79\x91\xed\x70\x7d\x8f\xd7\x80\x6a\x26\xb6\x4c\x34\x77\x79\x4e\xb6\x1d\xe3\x12\xcd\xf2\xac\xa0\x20\x17\x1b\x29\xbb\x22\x9f\xe7\xf9\x62\x81\x4e\x59\xdb\x42\x2d\x09\xa3\x88\x43\xc7\x41\x00\x95\x02\x61\x54\xef\xce\x73\xf9\xd8\x81\xcb\x27\x24\xef\x6b\x89\x9e\xf2\xec\xe2\x0c\xa5\xff\x84\xe4\x84\xae\x53\x94\xef\x7f\x08\x46\x4f\x0a\xd2\x94\x6c\x4b\x24\x6c\x3b\xf9\x58\x7c\xcf\xb3\x2f\x20\x58\xcf\x6b\x88\x34\xee\xd5\xf4\x8d\x87\xba\xae\xc9\x16\x84\xc4\xdb\x2e\x94\x20\x54\x4e\xf8\x6b\x75\x49\xe1\xab\xfa\x0a\xed\xea\xd7\x02\xfc\x26\xa0\x5d\xf9\xca\x3e\x5c\xe3\xa4\xc4\x01\xca\x40\xe2\xb5\xaf\xec\x8c\xd5\xfd\x56\xe7\xea\xd5\xca\x1a\x56\x87\x61\x4a\xc6\xa1\xb9\xe2\xac\x86\xa6\xe7\x20\x5e\x13\x66\xc7\x23\x75\xd7\x9c\xac\xd7\xc0\x23\xd7\x0e\x50\x27\x07\x51\x5f\xe1\xff\x05\xf0\x33\x58\x11\x0a\xcd\xc7\x9e\xea\x2a\x14\x07\x2a\xec\x9b\x55\xa0\xec\x94\xd1\x55\x4b\xea\x5f\x41\xae\xb6\xa2\xbe\xc6\x0b\xda\xc0\x03\xa1\xeb\x2b\xd6\x92\xfa\xd1\x91\x3b\x9a\xa4\xd8\x36\xf0\xe8\xbe\xd6\x2b\xcc\x25\x51\xa1\x7e\x82\x47\xcf\x9b\xa3\x49\xca\xa0\xb5\x73\xe8\xe9\xd8\x55\xbb\xb5\xbd\x62\x19\x3c\x3b\x9a\xa4\x0c\x3a\xeb\x09\xba\xaf\xff\x1c\x98\xe8\xb0\x24\xb8\x55\xfa\xc8\x08\xe6\xd1\x24\x65\xd0\xbf\x0e\xe8\x9e\xde\x67\x3d\xaa\x02\x30\xdd\x71\x45\x91\x45\x12\x75\x9a\x6a\x86\x56\x20\x31\x0e\xae\xf7\xbd\x64\x5b\x2c\x49\xad\x5d\xb8\x63\xac\x8d\x51\xc4\x96\x27\x9d\xec\x4b\xd6\x40\x54\x33\x41\x5a\x15\x4f\x28\x5d\xb7\x7d\x03\xcd\x15\x96\x1b\x81\x6e\x6e\xdd\xef\x51\xda\xe1\x09\x46\xc8\xc3\x7e\x71\x78\x98\x12\xb7\x30\x3a\x32\x21\x88\x86\x84\x3a\x2c\x37\x16\x42\x87\x7b\x04\x50\x7f\x3a\x3d\xb3\xab\x3c\xb9\x49\xc0\x05\xc6\xd7\x06\x1e\x3c\x84\x20\xed\x9e\x62\x4b\x24\xd7\x49\xa9\xe3\xc8\x19\x96\xf8\x5a\x11\xac\x2b\x83\x81\x66\x38\xf7\xbd\xf9\x44\x68\xe3\x35\xfb\xc0\x7d\x4f\x68\xb0\x44\xae\x38\xd4\x44\xa8\x75\x37\x6c\x0d\x1b\xa1\x3d\x4f\xb8\xee\x66\x27\x88\xc0\x26\xc5\x41\xd6\xe3\x0e\x90\xf5\xbd\x8b\x50\x35\xe6\xbc\x31\xe0\x2d\xef\xdd\x00\x40\xf7\x30\xb4\x82\xc7\xec\x5b\x53\x83\xf0\xe6\x36\x36\x29\xd2\xd8\xed\x4a\x7e\x12\xbb\xdf\x80\xbb\xc8\xed\x38\x7f\x98\xf3\x44\x28\x93\xd3\x27\xb8\x93\x18\x2e\xc4\x77\x6c\x5e\xbb\x4f\x6a\x19\xe3\x35\x5d\x9b\xfe\xf3\x11\xd8\x46\xbd\x9b\x50\x3f\x74\x41\x28\x9b\x18\x96\x51\x63\x24\xb4\xd9\xfd\xbb\x5f\x9b\xe5\x4c\x40\x19\x0d\x5a\x0f\xc2\x71\xcc\x6a\x34\xc9\xda\x20\x17\x09\x8d\x88\xe9\xe6\xf2\x1d\x92\x61\x5f\x3d\x07\x57\x49\xe1\x1a\x1d\x6f\x92\x22\xbc\x4a\x0a\xc7\xce\x29\xeb\x77\xd7\x33\xef\xa2\x36\x2e\xdf\x9e\xca\xe9\x5b\xa3\x37\x89\x27\xef\x86\xae\xed\x9b\x5b\xe7\x52\x3b\x48\xd8\x6b\x95\xc3\xb7\xa7\xf3\xbe\x60\xba\x06\x2f\x60\xaf\xfb\x10\xd7\xf4\xb8\x09\x07\xb9\x34\x00\x29\x1c\x5e\x07\x87\x5f\xd3\x49\x0d\x11\x38\x09\xf7\x6e\x6e\xa3\x43\x2b\x1f\x73\x1f\x82\xd4\x0b\x83\xca\x40\x35\x81\xd4\xcb\xaf\x8e\x70\x26\x1d\xf0\xbc\x08\x45\x0e\x7a\x47\x84\x13\xed\x90\x07\x43\x64\xe8\xa0\x97\x41\x24\x15\x3f\x01\x2e\xf1\x83\xde\x21\x82\xfc\x80\x09\xa9\xad\xc3\x12\x08\x13\xaa\x57\xfb\x4b\xc2\x0e\xcb\x14\x9c\x57\x1c\x56\xe4\x21\x81\x0c\x27\x8d\xa1\x05\x98\x6e\x38\xeb\xd7\x9b\xae\x97\x1f\x39\x36\x9d\x17\x4a\xca\x88\x25\x7c\xac\x60\xd9\x8b\x17\xc1\x12\x9a\x25\x2a\xee\xf0\xb9\x14\x2f\x3d\xcd\x12\x96\xb1\x2e\xc8\x71\x8a\x9d\xb6\x04\xa8\x74\xea\xf1\x48\xdd\x35\xee\xb0\x00\x43\xc9\xb3\x6e\x5c\xe1\xd1\x68\x1c\xa4\x89\xff\xc6\x46\xb5\x11\x0d\xe6\xa3\x65\xa6\x12\xf8\x0a\xd7\xa0\xc7\x04\x07\x2c\x61\x76\x34\x72\xcd\x91\xfb\x55\x22\xe0\x9c\xf1\x79\x9e\xfd\x97\x08\x39\x9b\x3b\xea\x2e\x24\x70\x2c\x19\xcf\xb3\xf7\x6d\x3b\x8b\xcf\x7d\x45\x62\xd4\x74\x0e\x72\x66\xe2\x99\xb2\x75\x06\x2d\x84\x5e\x69\x9a\x2a\x96\xae\xc5\xf5\x41\x1e\xc7\x23\xc5\x31\x9b\x98\x37\x56\x30\x4e\x92\x8a\xdd\x86\xe5\xa6\x2a\x4c\x63\x9e\xd5\x8c\x4a\x42\x7b\x6c\xff\x6b\x43\x25\x2d\x6b\x18\x1d\xaf\x09\xea\x79\x10\xe5\x71\xa7\x3c\xcc\x24\xb1\x20\x07\xb9\x1c\x05\xdc\x6c\x7e\x86\x07\x95\xa3\x34\xee\xc6\xe6\x67\xf8\x19\x55\x04\x07\xd9\x73\xaa\x2c\x53\xf8\x99\xa8\xa3\x55\x4f\xeb\x94\xe0\xac\x46\x67\x5e\xb1\x96\xa8\xb9\x23\x0d\xb2\x28\x47\x86\x9e\xf2\xcc\xd8\x42\x6f\x43\xe8\x9e\xf2\x2c\xf3\x2b\xff\x04\xd5\xd5\x2c\xe8\x86\x79\x99\x67\xba\x21\x4e\x9c\xc6\x2b\x9a\x3b\xb1\x28\xd0\xb1\x36\x5e\xe6\xd9\xb3\x0a\x55\xfb\x3c\xab\x51\x94\xa3\x39\x1a\x6a\x9e\xc2\x4f\x45\x43\x7e\x25\x85\x47\x1a\xbe\x01\x42\xe5\xbf\xfa\x5a\xa2\xba\x6a\xd8\x6c\x23\x65\x57\x5d\x82\xdc\xb0\xe6\x8a\x09\x59\xa2\xba\x52\xae\x1d\x17\x0b\xa5\x44\x14\x25\x2a\xec\x0f\x43\x29\x91\x16\x31\x23\xc7\x78\xd1\x94\xe8\xed\xe0\x48\x69\x40\x29\x11\x25\xed\xdc\x02\xb5\x27\x94\xc9\xa6\x4c\x43\xed\xd6\xf1\x53\xa8\xed\x04\xd5\xfb\x90\x53\x8d\x4e\x12\xd6\x26\x4a\x4e\x39\x81\xdb\x56\x83\x80\x4e\x96\xe8\xad\xc3\xf3\xf4\x9c\xe7\xd9\xca\x38\x9a\x69\x0e\x83\xf4\xc9\x12\x91\xca\xd4\x71\x9e\x65\x64\xa5\x0f\xdf\x2c\x15\x28\x9a\xd5\x46\x45\x49\xab\x05\xf2\x2c\x7b\x36\x8c\xc6\xcc\xd2\x61\xbd\xe3\x80\xef\x35\x43\x9e\xed\x1c\xa9\xcc\xcd\xe8\x78\x89\x9c\x4f\x97\xee\x6c\x77\xcb\x33\x1e\xf9\x8a\xc6\xdb\xdf\x12\xe1\xae\x03\xda\xcc\x52\xd4\x12\x45\x47\x55\x55\xcd\x73\xed\xd8\x10\x8f\x95\xd3\xe9\xdf\x93\x06\x35\x40\xd5\xa9\xd3\x6a\xbf\x58\xb7\xe7\x10\x95\xed\xa2\x38\x36\xba\xa3\xf2\x4d\x70\x38\xf5\xfc\xbf\x4f\xa5\x49\xca\xeb\xab\x78\x18\xf7\x71\x37\x6a\xf7\x95\xf7\x43\x7a\x2b\x7d\xb5\x59\x2e\x51\x51\xe8\x0c\x0f\xd8\x7d\xe0\x5c\x11\xbe\xc0\x9f\x3d\xe1\xd0\x28\x5c\xb3\x0d\xe0\x06\xb8\x2e\x3b\xed\xe4\x7f\xf4\xf7\xd3\x48\xa9\xbe\x82\x9c\x15\x17\xab\x77\x97\x58\xd6\x9b\xa2\x1c\x0d\xec\xdc\x8e\xe0\x32\x8e\x4e\xe0\x51\x5d\x9c\xed\x83\x4c\xb3\x38\x98\x7d\x66\xa7\x8c\x4a\x3d\x38\x35\x74\xfa\x9f\xc1\xbf\xf9\x1e\xd0\xec\x22\xfc\xb7\xc7\xd8\xa2\x38\x1e\x4c\xec\x09\xd0\xe5\xfa\xa7\xe7\x5c\x62\x95\x87\x0d\xd0\xdd\x73\x81\xa6\xd6\xfa\xdf\x6a\x84\xe3\x62\xd1\xdd\x9b\x87\x97\x9a\xe9\xce\xef\xd7\xf5\x85\xf2\x70\x2a\x6a\xe2\x46\xed\x8e\xe9\x39\xb2\x4b\xdd\xcc\xb7\x68\xce\x3a\xa1\x91\x15\x22\x95\xbe\x6c\x8c\xcd\x61\x86\xcc\x74\x37\x68\x19\xef\xd6\xf2\x66\xd7\x5e\x5e\xa7\xfc\xfe\xee\x52\xbc\x3b\x75\x18\x8b\x32\x90\x1c\x06\x9a\x01\x98\xa4\x00\x26\x93\x0b\x92\xc4\x0b\xd2\x1f\x28\xc2\x69\x8c\xc4\x5a\x70\x83\x0d\xe2\x59\x5a\xc1\xea\x3c\x1d\x87\x52\x68\x60\x5b\x86\x58\xe8\x51\x93\x3b\xe9\xfa\x2b\x00\x00\xff\xff\x74\xd0\xbc\xe5\x0e\x1b\x00\x00")

func collectionGoBytes() ([]byte, error) {
	return bindataRead(
		_collectionGo,
		"collection.go",
	)
}

func collectionGo() (*asset, error) {
	bytes, err := collectionGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "collection.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cosmosdbGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\xdb\x6e\xdb\x38\x10\x7d\x16\xbf\x62\x2a\x20\x81\xd4\x2a\x54\x92\x6d\x8b\x85\x17\x7e\x68\x53\xf7\x9e\xec\x25\xee\x53\xbb\x40\x19\x6a\x64\xb1\x96\x48\x95\xa4\x92\xba\x46\xfe\x7d\x31\xa4\x9c\x38\x75\x50\x14\x58\x03\x86\xc8\xe1\x70\xe6\xcc\x99\x0b\x7b\x21\x97\x62\x81\x20\x8d\xeb\x8c\xab\x2e\x18\x53\x5d\x6f\xac\x87\x8c\x25\xe9\xc5\xca\xa3\x4b\x59\x92\x4a\xbb\xea\xbd\x29\x9b\x4e\xc8\xad\xad\x6b\xc4\xf1\x93\xa7\x24\x40\x2d\x4d\xa5\xf4\xa2\xbc\x10\x0e\x9f\x3e\x26\x51\xdd\x79\xfa\x28\x53\x2a\x33\x78\xd5\xd2\x46\xa3\x2f\x1b\xef\xfb\xcd\xda\xe3\x37\xdf\x5b\xe3\xcd\x46\x30\xd8\xa0\xe7\xbc\x55\x7a\x11\x3c\x7b\xd5\x61\xca\x58\x92\x2e\x94\x6f\x86\x0b\x2e\x4d\x57\x0e\x0b\x63\xbf\xa8\x72\x61\x4a\x69\x2a\x94\x29\xcb\x19\x2b\x4b\x98\x59\x6b\x2c\x58\xec\x2d\x3a\xd4\xde\x81\xd0\x80\x24\x63\x7e\xd5\xe3\x78\xec\xbc\x1d\xa4\x87\x35\x4b\xce\xbd\xf0\x83\x3b\x31\x15\x82\xd2\x9e\x25\x61\x15\x7f\xd1\x3f\x7c\xfe\xe2\x8c\x9e\xa4\xe4\x24\xfd\xcc\x92\x53\x74\x8e\xa8\xda\x51\xe8\xe2\x41\xfa\x99\x5d\x33\x56\x0f\x5a\x42\x36\xba\xcb\xe3\x27\xcb\x37\x37\xd6\x2c\xb1\xe8\x07\xab\xa1\xee\x3c\x3f\xef\xad\xd2\xbe\xce\xd2\xbd\x0a\xf6\xdc\x04\xf6\x5c\x5a\x00\xf2\x5b\x64\xb4\xdb\x7c\x47\xf7\x39\x39\x29\x4b\x78\xe3\x82\xe9\xad\x28\xa2\x61\x07\xde\x0e\x08\xaa\xa6\xd8\x41\x39\x30\x35\x6c\xc5\x2f\x74\x05\xca\x3b\xb8\xbd\x47\xc6\x3a\xe1\x65\x83\x0e\xdc\xad\x34\xc4\xb1\xe3\x24\x23\xa3\x81\xd4\x62\x4b\x99\x08\xcc\xe1\xc2\x98\x96\x02\x8c\xae\x0b\x30\x4b\x98\x4c\x69\xc9\xb3\x48\xc6\x1f\x24\x5a\xb3\x64\x43\x01\x1d\x6d\xe1\x9f\x4e\xb7\xfd\x27\xd7\xb7\x54\x89\xd6\xe1\x18\xf6\xcc\xda\xd9\x5c\x2c\xfe\xc1\xaf\x83\xb2\x58\x51\x80\xbe\xc1\x08\x69\x64\x80\xa4\x75\x90\x92\x26\xd4\x0a\xdb\xa0\xa7\x8d\x87\xde\xf4\x43\x2b\x3c\x82\xd1\x20\xc8\xde\x5f\x1f\xe6\x60\x2c\xbc\x98\xbd\x9f\xcd\x67\x60\x7a\xb4\xc2\x2b\xa3\xd9\xa5\xb0\x3b\xbe\xa6\x21\x69\x21\x96\x3a\x4b\x83\x71\xe5\xc0\x8e\xc7\x69\xce\xc2\xad\x06\xa6\xb0\x1f\x0a\x93\xbf\x75\x46\xbf\x16\xba\x6a\x71\xcd\x92\xe7\xc2\x29\x19\x77\x13\x88\xe7\x5b\x22\xa2\xe5\x05\x92\xf8\xcf\x9e\x00\xb8\x8d\xce\x1d\x21\x69\x25\x01\xc0\x9b\xfa\xcc\xbc\xa4\xc8\x26\x21\xdf\x05\x4b\x92\xeb\x82\xd1\xff\xa6\x06\x25\x3c\xac\x84\x17\xd4\x92\x27\xad\x42\x4a\x91\x18\x7c\x63\xac\xfa\x8e\x14\x13\x3a\x9f\x59\xfc\x0a\x0f\xa9\x25\xf9\x28\x29\xc0\xa2\x33\x83\x95\x38\x5f\xf5\x78\xbb\x7b\xaf\xf4\x72\x2c\xe2\x9c\x72\x58\x11\x89\x93\x29\x50\x7f\xf2\x33\x73\x95\xe5\xfc\xc3\xfc\x24\xcb\xf9\x4b\x63\x3b\xe1\xb3\xf4\xd4\xe8\x02\x0e\x8f\xe1\xad\xd0\x70\x7c\x78\xf8\x14\x8e\x9e\x4c\x0e\x1f\x4f\x0e\x9f\xc0\xab\xd3\x39\x71\x95\x34\x74\x9f\x46\x0a\x3f\xc3\xab\x2c\x0e\x13\x5a\x16\x20\x79\x27\x9c\x47\xfb\x0e\x57\x39\x4b\x88\xf4\x97\x63\xa7\x34\x05\xa4\x7b\xee\x93\xde\xfe\x7f\xd2\x69\x31\x42\x73\x7c\x6e\xde\x9b\x2b\xb4\x14\x18\x3f\x45\xdf\x98\x2a\xff\x59\x48\xbb\x17\x29\xb0\x9c\xe0\x91\x85\xd7\x28\x2a\xb4\xfc\x1c\x7d\x96\x3e\x1b\xb9\x0b\xf5\x91\x16\x30\xd8\x96\xff\x3d\xa0\x5d\xcd\x9c\x14\x3d\x66\x77\x1a\x9a\x3a\x6e\x1a\x83\xd8\xbf\x44\x3b\x3d\xe2\x87\xfb\x4e\x2d\xa6\xa1\xc3\xe3\x90\xe4\xe7\xbe\x9a\x8d\x73\x93\x87\x05\xce\xcd\x79\x40\x93\x35\xfc\x7c\xe8\x32\xad\xda\x9c\x7e\xbb\x58\xbe\x1d\x74\xee\x80\x90\xa6\x05\x04\xc0\x3f\xcd\x7a\x65\xb2\x2e\x50\x51\x40\x2f\x7c\xf3\x0b\x29\x2e\x00\xbf\xf5\x28\x3d\x56\x77\xa7\x64\x01\x4a\x17\x60\x06\x4f\x1b\xb4\xb5\x90\xb8\xbe\x2e\xa0\x09\xd0\x1c\x84\x42\x8a\x38\xf3\xb1\x25\xc3\xc0\xfb\x5a\x84\x61\x44\xe9\x26\x8d\x33\xbc\xda\xd4\xdf\x06\x57\x4a\x07\x6e\x52\x96\xe9\x23\xc9\x37\xf8\x9f\x49\x69\x06\xed\x1f\xa5\xbc\x32\x72\xe8\x68\xa6\x73\xf1\x7d\xb0\x18\x5e\x81\xf4\x51\x0c\x86\x58\xda\x0c\x1d\x78\x30\xa5\xfd\x0f\x43\x86\x66\x49\xd0\x50\x7a\x5b\xe1\x62\xa8\x09\xd2\x7e\x78\xe5\xf8\xf3\xa1\xae\xd1\xae\xaf\x59\x92\x8c\x58\x63\xff\x9d\xe1\x55\x4c\x8e\xcd\x2e\x86\xba\x80\x26\x1f\x93\x95\x29\x9d\xb3\xe4\x1e\xc7\x77\x3c\xd3\x18\x0b\xe9\x7b\x6e\xaa\x15\x4c\x21\x3e\x86\xfc\xcc\xf4\x27\xad\x71\xd1\x68\x3e\xaa\x6c\x67\xf8\xc4\x68\x8f\xda\x1f\x50\x8a\xd2\x02\x52\xd1\xf7\xad\x92\xa1\xf6\x4a\x7a\x75\xd2\x3c\x46\x55\x1b\x0b\xcb\x02\x2e\x09\xb0\x15\x7a\x81\x37\xc9\x58\xdf\xb1\xfa\xf1\xe6\xad\xe5\x27\x42\x1b\xad\xa4\x68\x4f\xdf\x9c\xce\xe2\xe9\x3b\x5c\x65\xcb\xfc\x5f\x98\xc2\x65\x34\x7b\x6f\xc1\x5d\xa2\x75\xb1\xf6\xd3\xe3\xc3\xa3\xdf\x0f\x8e\x8e\x0f\x7e\x3b\x0a\xad\x2c\xf9\x7d\x93\xe5\x67\x85\x16\x3b\xcc\xf5\x37\x95\x21\x79\x23\xf9\x0b\x43\xf7\x7e\x21\x9d\x49\x85\x35\xd2\xc0\x77\x7d\x60\x96\x07\x36\xb3\x3c\xe6\x79\x43\xc1\xd6\xf5\xc0\xd3\xfd\x24\x25\x15\xb6\xe8\x31\x1b\x65\x05\x2c\xf3\x31\x6f\xbb\xe4\x06\x87\x91\x98\x78\x77\xbc\xf4\x71\x39\x92\x47\xf7\x88\xc0\xea\x4e\x05\xc5\x21\x4e\x53\x69\xc4\x4b\x75\x14\xb1\x06\xd1\x56\x97\x3d\x98\xde\xd7\x7b\xe4\x8b\x1e\x17\x22\x25\xcc\xff\x58\x79\x5b\x70\xf8\xab\x9d\xb2\xc9\xe9\x49\xdd\xad\x9c\x31\xe8\xf1\x65\xc9\xf6\xd1\xda\x4d\xc0\x3f\xbe\xc8\x3f\xa2\xbb\xbf\xad\x68\x1e\x8c\x54\xef\xef\xff\x0f\x4c\xa3\xe9\x5b\x64\x66\xf0\xf9\xa6\x1e\xc3\x91\x56\x2d\xbb\x66\xff\x05\x00\x00\xff\xff\x71\xe6\x4d\xd7\xb4\x0a\x00\x00")

func cosmosdbGoBytes() ([]byte, error) {
	return bindataRead(
		_cosmosdbGo,
		"cosmosdb.go",
	)
}

func cosmosdbGo() (*asset, error) {
	bytes, err := cosmosdbGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cosmosdb.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _databaseGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x96\xcf\x6f\xdb\x36\x14\xc7\xcf\xe4\x5f\xf1\xaa\x43\x20\xa5\x8a\x72\x19\x76\x30\xa0\x43\x91\x04\x59\xd0\x25\x1b\xea\x0e\x18\x50\x14\x2d\x45\x3d\xdb\x5c\x65\xd2\x23\xe9\x65\x81\x91\xff\x7d\x20\xa9\x1f\xa4\x6c\x77\xa8\x0f\x4e\xc4\xf7\xf8\xde\x97\x1f\x7e\x49\x79\xc7\xf8\x37\xb6\x46\xe0\xca\x6c\x95\x69\x1b\x4a\xc5\x76\xa7\xb4\x85\x9c\x92\x0c\x25\x57\xad\x90\xeb\xeb\x86\x19\xfc\xf9\xa7\x8c\x92\x4c\xa2\xbd\xde\x58\xbb\xcb\x68\x41\xe9\xf5\x35\xdc\x32\xcb\x5c\x14\x34\xee\x34\x1a\x94\xd6\x00\x83\xb6\x1f\xa5\xf6\x65\x87\x53\x8e\xb1\x7a\xcf\x2d\x1c\x28\x79\xb8\x85\xf1\x63\xac\x16\x72\x0d\x5f\xff\x32\x4a\x2e\x32\xd1\x96\x6a\x2b\x2c\x6e\x77\xf6\x25\xfb\x4a\xc9\x07\x34\x6a\xaf\x39\xba\x19\x69\xe6\x17\x3d\xcf\xfd\x28\xb6\x68\x2c\xdb\xee\x00\x40\x48\xeb\x8a\x0f\xb9\xd6\xa4\xa9\x4b\xec\x56\xa7\x05\x7c\x31\xd8\xad\xd2\xe4\xbb\x8f\x6c\x7d\x26\x19\x2d\x5b\xa7\xc9\x37\xaa\xeb\x90\x5b\xa1\xa4\x99\x27\x73\xd5\x75\x33\x1d\x7f\x18\xd4\xe6\x74\xe9\xbd\x0b\x25\xd9\xaf\x09\x72\x13\x33\x1f\x88\x9b\x14\xb9\x89\x98\xdf\xa8\x7d\x60\x32\xc2\x89\x01\x71\x17\x3d\x8b\xbe\x97\x16\x4f\x38\xa2\x3f\xf5\x84\x4f\x9f\xc7\x3d\xef\xd3\xc7\xe0\x7c\x41\x5e\xee\xa0\xfe\xa6\x13\x28\x6d\xa4\x79\xc3\x21\xf9\x5c\x3a\xef\x55\x21\x8d\x92\x61\xda\x3b\xee\xd5\xf7\x2a\x29\xd9\x32\x63\x51\xbf\xc7\x97\x7e\xd6\xa7\xcf\xcd\x8b\xc5\x19\xbe\xbe\x97\x88\xfd\x0a\x3c\x54\x4e\x18\x0e\x89\xd2\xa2\x5e\x31\x8e\x9e\xa5\x46\x66\x31\xbf\x1c\x72\x0a\x98\xfe\x2f\x01\xb5\x56\xba\xa0\xe4\x57\x61\x6c\x5e\x8c\x85\x1e\x2c\x6a\x66\x95\xa6\xe4\x5d\xd7\xe5\xf3\xd1\xb8\x84\x99\x6a\xdc\xa3\xcd\xc3\xba\x4e\xf7\xb8\xc5\x0e\x53\x25\x3e\x72\x84\xd6\x69\x19\x5a\x45\x80\x2f\x53\xf4\x94\x70\x25\xad\x90\x7b\xe6\x0c\x3c\x02\x6d\x95\xc4\x71\x0f\x1a\xa5\xba\x19\xcb\xb1\x70\x4a\x53\x0c\x0b\x4e\x78\x4e\xc9\x31\xd1\x27\xfc\xd7\xb1\x3a\xc5\x20\xf4\x7a\xc2\xe7\xd9\x8e\x68\xb4\x7b\x2d\x5d\x47\x89\xcf\x47\x7b\xb8\xda\x4b\x7e\x3c\x29\xdf\xf0\xc4\x44\x25\xcc\x4c\x54\xc2\xe4\x9e\x91\x7b\x5a\x63\x10\xe6\x64\xff\xc3\xb4\x7b\xea\xa1\x53\xc2\x61\x51\xc3\x45\x0a\xf5\x40\x09\xd9\xf0\x45\xea\xe4\x0d\x2f\x29\x99\x3b\x78\x71\xa4\x86\x92\x57\x57\xb5\x1a\x45\xf9\xe6\x50\x43\xb8\x92\xab\xa5\x6d\xef\xfa\x5b\xba\xba\x45\xae\x5a\x5c\x7a\xd1\xf9\x38\xa1\xa0\x44\xac\xfc\xa4\x37\x35\x48\xd1\x39\xd5\x24\xa0\x73\x8f\xbe\x5e\xe8\xd2\x0f\xf2\xd2\x8d\x3b\xea\x1e\x61\xce\x61\x66\x92\x02\x7a\xfb\x4b\x7c\x6e\x1b\x88\x0f\x41\xfc\x58\x4e\x60\x3c\xaa\xa0\x9b\x57\xad\xca\xfd\x06\x3c\xa2\xdd\xa8\xf6\x77\x65\x6c\x09\x59\xdb\x98\x6c\xfa\x93\x95\xe0\x53\x96\x96\xd9\xbd\x09\xdd\xda\x12\x2e\x7c\xc3\x12\x2e\xdc\x97\x14\x5d\x31\x68\xfe\xae\xd8\x33\xa7\xd0\x49\xea\x57\x7c\x71\xea\x90\x1c\xd2\x3a\x0b\xe0\xaf\xdf\x6d\xe3\xce\xb4\x38\xea\x72\xd2\xd1\xae\x35\xeb\xba\xb6\x31\xde\x2d\x63\xfc\xe0\x76\x61\x15\xa4\x91\xb6\x09\xf9\x2e\x45\x54\xe1\x78\x50\x72\x62\x2f\x8f\x37\x93\xbc\x86\x44\xd7\xa0\x8e\x12\x1b\x8d\xec\x9b\x0f\x53\xd2\x0b\xa8\xc2\x5b\xe1\x6d\x0d\xe3\xc3\x14\x8b\x5e\x00\x21\x3e\x0d\x4c\x49\xd3\xb5\x5f\x03\xdb\xed\x50\xb6\xf9\x3c\x52\x42\xf2\x58\x55\x55\x91\x38\x2e\xe4\xff\xbf\xed\xdc\x5d\xd8\x36\xa2\x9d\x0e\xe6\x8f\xfb\xed\x1e\x7b\xbb\x5d\x67\x6f\x5d\xad\xc4\x7b\xe3\x58\xe4\xbe\xdf\xde\x97\x01\xed\x8f\xb9\xae\xbf\x97\xd3\xf3\xe1\xc5\x39\x6d\x7e\x73\x2a\xff\xbb\xa2\xae\x21\xcb\xe2\x43\x79\xa7\xb5\x0b\x7c\xc0\xbf\xf7\x42\x63\xeb\x48\x91\x0d\xb2\xd6\xfd\x50\x58\xd4\x41\xda\x2f\xfe\xf9\x30\x45\xaa\x25\xda\x3c\x7b\x58\x5d\x3d\x32\xcb\x37\x59\x39\x94\x2f\xa6\x63\x3d\x03\x11\x04\x46\xeb\xae\x1e\x6e\x8f\x61\xf8\xc1\x88\xc6\x93\xba\x51\xd2\xfa\x4b\xd0\x43\xf1\x5f\xbd\x86\x62\x02\x22\x26\x20\xf1\x99\x2a\x60\xb8\xe6\x9d\x35\x67\x07\x23\xda\x3a\xb1\x02\x51\xf9\x97\xce\xc4\x25\x38\xe6\x3c\x08\x3f\x27\x79\x7b\xbd\x19\xc9\x26\x90\xfe\xbc\x7a\x34\x57\x37\x51\x62\x56\xce\x66\xf6\xee\x0c\x06\x12\xe7\x0c\x74\xf6\xbe\x8a\x1d\x63\x22\x3a\x67\xef\xe1\xd0\x6e\xa6\xbe\x1e\x26\x56\xf7\xa7\x55\xbb\x82\x01\x52\x3d\x5f\xb9\xf7\x14\x8d\x7c\xfa\x5f\x00\x00\x00\xff\xff\x9d\xc0\xfd\x5d\xe7\x0b\x00\x00")

func databaseGoBytes() ([]byte, error) {
	return bindataRead(
		_databaseGo,
		"database.go",
	)
}

func databaseGo() (*asset, error) {
	bytes, err := databaseGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "database.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _documentGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xcd\xaa\xc2\x40\x0c\x85\xd7\x9d\xa7\x08\x5d\x5f\xe8\xfe\x3e\x84\xe8\xc6\x8d\x08\x8d\x35\x94\xaa\x99\x19\x93\x54\x28\xe2\xbb\x4b\x7f\x9c\x32\x9d\xd5\x24\xe7\x7c\xe4\x8b\xd8\xdc\xb1\x25\x68\x82\x72\xd0\xeb\xc5\xb9\xaa\x82\x43\x4f\x32\x80\x50\x14\x52\xf2\xa6\x80\xf0\x1c\x57\xce\x86\x48\x4b\xaa\x26\x7d\x63\xf0\x76\xc5\x3c\x4f\x4f\x4d\x3a\xdf\xce\xff\xfa\xa6\xc1\xff\x97\x13\xf8\x17\xb8\x33\xe2\x68\x43\x59\xbb\x62\x8f\x82\x4c\x46\xa2\x70\x3a\xa7\xe1\x07\xc4\x94\x66\xd4\x67\x32\x5b\xdb\x99\x5d\x62\x66\xc3\xb5\xb5\x5a\xee\x90\x29\x09\x2e\xa7\x3c\x32\xe5\x6a\x47\x7c\xf4\xb4\x69\xbd\xc6\xdd\xc6\xe5\x1b\x00\x00\xff\xff\xa1\x09\x70\x18\x37\x01\x00\x00")

func documentGoBytes() ([]byte, error) {
	return bindataRead(
		_documentGo,
		"document.go",
	)
}

func documentGo() (*asset, error) {
	bytes, err := documentGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "document.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x4d\x6f\xe3\x36\x13\x3e\x8b\xbf\x82\xab\x43\x20\xc5\xb2\x74\x37\xe0\xc3\x0b\x27\xc8\x1b\xb4\x49\xd3\x6c\x0e\x05\x8a\x02\xa1\xa9\xb1\xcd\xb5\x2c\x6a\x49\x0a\x69\x60\xe4\xbf\x17\x24\xf5\x41\xca\x92\xb7\x29\xb6\x69\x9b\x43\x14\x51\xf3\xfd\xcc\x33\x9c\x54\x84\xee\xc9\x16\x30\xe5\xf2\xc0\x65\xbe\x46\x88\x1d\x2a\x2e\x14\x8e\x50\x10\x96\xa0\xb2\x9d\x52\x55\x88\x50\x50\xed\xb7\x38\xdc\x32\xb5\xab\xd7\x29\xe5\x87\xec\x0b\x3b\xcc\x0f\xac\x54\x20\xb2\x2d\x9f\xb7\xea\x59\xb5\xdf\x66\x5b\x28\xbb\xf7\xee\x8f\xbc\x3e\x1c\x5e\x43\x14\x23\xa4\x5e\x2b\xc0\x0a\x0e\x55\x41\x14\xac\x0a\x06\xa5\xc2\x52\x89\x9a\x2a\x7c\x44\xc1\x65\x4e\x14\x59\x13\xd9\x7c\x41\x41\x45\xd4\x0e\x77\x3f\x52\x09\x56\x6e\x51\xc0\xe4\x03\x11\x8a\x29\xc6\x4b\xc8\xf1\x9a\xf3\x02\xbd\x21\x94\x65\xf8\xc9\x37\xcc\x24\x26\x9d\x33\x4c\xad\x4d\x13\xc1\x50\x50\xa7\xb2\x21\x14\x74\x10\x2b\x01\x44\x41\x64\x9d\x25\xf8\xb2\xda\x6f\xd3\x56\x3e\xc6\x91\xf7\x9e\x60\x10\x82\x8b\x18\x05\x3f\x32\xa9\xa2\xb8\x33\x7c\xab\x40\x10\xc5\x05\x0a\xfe\x57\x14\xd1\xf0\x74\x68\x46\xf6\x76\x6e\x40\x75\xae\xed\x73\xda\xe7\x23\x54\x05\xa1\xef\x0e\xf5\x0a\x0a\x98\x4e\xd0\x48\xa1\xe0\xe7\x1a\xc4\x6b\x74\x69\x1e\x23\x69\xbd\x0d\xa0\xd4\xe9\xb7\x1f\x5d\x40\x7d\xa8\x51\x40\x79\xa9\x58\x59\x13\x8d\x5d\x87\x67\xce\x4b\xe8\x40\x6e\xe1\xf4\xcc\x9b\x30\xfe\x8c\xfd\xaf\x5a\xb0\x35\x65\xa3\x7f\x8f\x53\xa7\x87\x3a\x6f\x7e\x17\xb1\xb6\x02\x5e\x1f\xf5\xc2\x6e\x27\xdd\xc3\xef\xba\x27\xa6\xb0\xb6\xfe\xee\xe1\x65\xd0\x8d\x02\x54\x2d\x4a\xed\xb5\x84\x97\x93\xfe\xdd\xd4\x25\x3d\x55\x8a\x28\x2f\x0a\x8a\x57\xbc\x28\x80\xea\x3c\xed\x71\x82\xf5\x39\xcb\x71\x0b\xf6\x29\x75\xe2\x21\x19\x8e\x28\xb0\x11\xe0\x0b\xbf\xba\x47\x14\x04\x3e\x41\x17\xc6\x3c\x4d\xa3\x4b\x3a\x70\x1c\xa7\xbe\x64\x82\x02\x43\xe6\x45\xcf\xe6\x33\xba\x86\xf6\x33\x1c\x66\xfa\x93\xcc\x42\x3c\x6b\xf2\xd0\x66\xbc\x14\x16\xd8\x4f\x29\x41\xc1\x9b\x2e\xac\xa9\x52\x44\xf1\xa0\x41\x62\xdc\xb0\xbb\x6a\x55\xf6\xf0\xda\x15\xa7\x84\x97\xae\xda\x43\x2e\x8d\x7f\x30\x58\x36\x78\xea\xc2\xed\x80\xe4\x20\x24\x5e\x2c\xb1\x9e\x9d\xe9\xff\xcd\xfb\xf1\x0d\x05\x6c\x83\x3d\x9f\x9f\x96\x38\x0c\xb5\x4a\xab\x93\x7e\x06\x15\x85\xbf\xcc\xef\xe4\xfc\x8a\xd3\xfa\x00\xa5\xca\xd7\xf3\x07\x47\x27\x4c\xf0\xf3\xaf\xe1\xf3\xcc\xb5\x33\x7b\x0e\x7f\x7b\x8e\x75\xd2\x81\x8e\x64\x89\x69\x9a\xf3\xc8\xf8\xbe\x03\xb5\xe3\xf9\x03\x97\xba\x0b\x4c\x49\x67\x61\x96\x73\x2a\xc3\x04\x87\xcd\xd3\x9e\x27\x36\xd8\xcf\x8a\xa8\x5a\xda\x02\xe5\x09\xbe\x70\xca\x91\xf4\xbd\x90\xe0\x26\xe0\xb8\xed\x93\xb3\xf5\x9e\x98\x8b\x63\x5d\xe6\xce\x90\xa3\x6f\x67\x81\xe9\x79\x58\xf5\x94\x65\x27\x5e\x26\xb9\xa7\xdd\x93\xa2\x68\xad\x18\xc0\x2e\x3c\xc9\xe3\x1b\x42\xc1\xc6\x06\x1a\x28\x4f\x5f\x0b\xb3\xd4\x92\x5b\xf7\xe3\xc6\x1c\x7e\x5a\xe2\x92\x15\x46\xbc\xcd\xac\x64\x85\x51\x40\x81\xc6\x47\x0b\xf6\x0e\x97\x8e\xf8\x5a\x00\xd9\x1b\x21\x14\x78\x61\xa5\x2b\x5e\x97\x0a\xcf\x96\x78\x70\x34\x94\x7b\x04\xc9\x6b\x41\xe1\xf6\x0a\xbb\xb2\xfd\xf1\x50\xe1\xa9\x0f\x04\x93\xaa\x82\x32\x8f\xc6\xbf\x27\x78\xe4\x30\x4d\x53\xd3\x73\x1d\x86\xae\x6e\xa2\x13\x3b\x0b\x96\xbe\xe3\xdc\x26\xee\x7d\x74\x93\xea\x3f\xcc\xb8\x1b\x18\x12\x2e\x0b\x67\x7d\x82\x43\xf2\x8d\xcb\x38\x84\xfc\xe9\x87\xc4\x76\xd2\x5f\xa5\x60\xbb\x26\xfc\x4d\x33\x8f\x6d\x5c\x23\xe9\xf5\x13\xd9\xea\xee\x6e\x6a\xed\x52\xe1\x5a\x08\xfd\xf5\x11\xbe\xd6\x4c\x40\x6e\x6a\x38\x8d\x9f\x87\xd2\xed\x66\x7e\x47\x14\xdd\x85\xc9\x89\xb3\xf8\x1f\x1c\xae\xf5\x08\xd4\x6e\x7c\xb7\x57\xd3\x70\x0f\xe5\x06\x90\x7f\x9f\xf1\xdb\xec\x7a\xa3\xd0\x4f\xe1\x6e\xa0\x6d\x90\xfd\x06\xac\xdf\x07\xd1\x8f\x87\xb3\x09\x7f\x88\xa7\xad\xd6\x34\x33\xcf\xe2\x39\x05\xe6\x3d\x5f\xf1\x52\x99\x65\xcc\xb0\xc0\xfc\xea\x40\x3c\x07\x9e\xdd\xc1\xed\x4a\x3b\xb5\x89\x8f\x5d\xa4\xde\xb6\x7c\x7a\x93\x26\xd8\x98\x5c\xd8\x87\x73\xaf\xb2\x3e\x04\xf7\x2e\x8e\x71\xbb\xc8\xf6\xd7\xd7\xc8\xb5\xea\x8f\x04\x96\x9a\x05\xbb\xef\x15\x7b\x5f\x9c\x1d\xd7\x2c\xf5\x36\xf5\x73\xb0\xaf\x1c\xc1\x30\x19\x68\x36\x77\x93\xe5\x2c\x1b\x1b\xcf\x6c\x62\x1f\x62\xa7\xfb\xd0\xe9\xf8\x95\x2e\x07\x4f\x6f\x7f\x37\xdd\x41\x46\xcb\x56\x31\xbd\x19\xcf\x44\x1b\xb4\x85\x5b\x0e\xab\x61\xb8\x87\x4e\x49\xef\x80\xe6\xe1\xfe\x31\xa8\x9d\x25\xe4\xad\x34\x1d\xa6\xeb\xfb\x24\x6a\xd0\xd9\x79\xf2\x0d\x2f\xe6\x4f\xaf\x15\x68\x21\x52\x55\x05\xa3\x26\xdd\xcc\x68\xce\xbe\xc8\xa6\x28\x3a\x34\xff\x7f\x97\x6f\x8e\x03\x53\x8d\xf9\x75\x49\xd6\x05\x50\xc1\xa5\xec\x66\x81\x1b\xd0\x07\x76\x9e\x5d\xc5\xdf\xd9\x7a\x17\x2c\x35\xa5\xf8\xf7\xf5\xdf\x1f\x01\x00\x00\xff\xff\xf7\xef\x58\x71\x3e\x12\x00\x00")

func templateGoBytes() ([]byte, error) {
	return bindataRead(
		_templateGo,
		"template.go",
	)
}

func templateGo() (*asset, error) {
	bytes, err := templateGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template.go", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"collection.go": collectionGo,
	"cosmosdb.go":   cosmosdbGo,
	"database.go":   databaseGo,
	"document.go":   documentGo,
	"template.go":   templateGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"collection.go": &bintree{collectionGo, map[string]*bintree{}},
	"cosmosdb.go":   &bintree{cosmosdbGo, map[string]*bintree{}},
	"database.go":   &bintree{databaseGo, map[string]*bintree{}},
	"document.go":   &bintree{documentGo, map[string]*bintree{}},
	"template.go":   &bintree{templateGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
